Notebook[{

Cell[CellGroupData[{
Cell["SpectrumScript", \
"CodeSection",ExpressionUUID->"9f3c0b39-97de-4c46-a7cb-aa00a06015a3"],

Cell["\<\
\[LeftCeiling]
\tThis implements all of the functionality used to build the H5+ spectrum
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"720ee29d-30b3-49ea-b0f3-b4418bb377ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<SpectrumScriptPackage`\>\"", ",", " ", 
    RowBox[{"{", "\"\<H5Core`\>\"", "}"}]}], "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"d3bfc766-dadc-40cd-9658-\
c4ae08428ff5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"loadEnvironment", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"2a746e6f-abc8-4a4b-a992-4c8740006cfa"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Caching / Debugging\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"18041b96-989c-44c7-b5ed-906b5ca62b7f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dumpSymbolFile", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dumpSymbol", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cachedLoad", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"debugPrint", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"37160332-02b6-4e16-aca7-6aa2e769def0"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]r1/r2\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f0dd2bec-1a10-4a09-8fd6-8bd7a8697a9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getR1R2Potential", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getR1R2PotentialMin", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getR1R2Wavefunctions", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], \
"CodeInput",ExpressionUUID->"719ee502-bacd-4d63-81cc-49220ff6ef9d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Phases\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9e38008c-cdcb-46df-bb91-2d3967b4cf51"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"meanShiftedWavefunctions", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"e95913d3-a29d-41ef-8315-c455899d9d3a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rephaseThingies", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rephaseWfns", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPhaseCorrection", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getCoeffPhaseCorrection", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getVectorPhaseCorrection", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"08a35c9a-bde3-4e61-979b-90937ca7baa8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"smoothOutCoeffs", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"d99a2ea7-84b2-4011-a618-328886c03d52"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"correctRowFlips", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"3f3a1c60-2429-4163-b5f4-b83885283f07"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Grids\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6aed2895-3c9e-4bf4-863a-530578a17660"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"e0d31727-362e-4294-8cd1-8d14dac3c659"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Extrap\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"522bde51-0900-4bcd-b256-8a8d7634e8e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"extrapolatedFunction", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"ababafae-141e-47fd-bf3a-9312f35a5a6c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SCF\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b88e440c-9874-4274-b9ff-4bf8f0c705aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"scfGrid", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scfWavefunction", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scfCoeffData", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"3a65502f-ec5d-4af4-b251-eaa01b082469"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Overlaps\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a5fa6fb9-a5f2-4ec6-aa5d-1dd7109b4d7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getSCFOverlapMatrix", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"6740ca9a-652f-47c5-a062-f11bffdd2fff"],

Cell[BoxData[
 RowBox[{"smoothOutCoeffs", 
  ";"}]], "CodeInput",ExpressionUUID->"b609f011-3629-4dfa-b811-b2b171f562b4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Wavefunctions\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7ff54558-5f31-4a52-b54b-d9abc8807266"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"coupledKineticEnergy", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"averagedPot", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coupledPot", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coupledGrid", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getWavefunctions", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pullProjections", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"ee6f94cc-0a83-4a0a-9529-d1a323f9c616"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getPot", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrapolatedPotential", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"63f468e5-09c9-4e69-8fce-1d5a0e60d85b"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Spectra\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0fe52a62-b95f-458a-b827-9d3b202286af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rebuildInterpolation", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"interpolatedDipoleSurface", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getDipoleVecs", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getTransitionMoments", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getTransitionWavefunctions", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getIntensities", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getFreqs", "::", "usage"}], "=", "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"buildSpectra", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"59a196f1-c246-43ac-a180-3b0c42c6e51c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lInter", "::", "usage"}], "=", "\"\<ListInterpolation hack\>\""}],
   ";"}]], "CodeInput",ExpressionUUID->"2a823369-bf1c-4992-a43f-190c848c1fed"]\

}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"6c71788b-5d4a-4df5-86ef-\
4d3454afd286"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "ChemTools`DVR`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "ChemTools`Wavefunctions`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"<<", "ChemTools`DataStructures`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"<<", "ChemTools`Spectroscopy`"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "preload", " ", 
    RowBox[{"because", " ", ".", "mx"}], " ", "can", " ", "do", " ", "weird", 
    " ", "things", " ", "sometimes"}], " ", "*)"}]}], "\n", 
 RowBox[{"CoordinateGridObject", ";"}], "\n", 
 RowBox[{"GridFunctionObject", ";"}], "\n", 
 RowBox[{"WavefunctionsObject", 
  ";"}]}], "CodeInput",ExpressionUUID->"cc13ea2d-08d4-428b-8734-bc1fb5b1ad9a"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Caching / Loading\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"5ed1bb65-1f96-4f52-8eec-1832a7626663"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getDumpBase\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ea39c2de-0dcd-44fa-a51d-3e6342d35a77"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getDumpBase", "[", "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dir", "=", 
       RowBox[{"H5PackageFile", "[", 
        RowBox[{"\"\<results\>\"", ",", " ", 
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"$Context", ",", " ", "\"\<`\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Quiet", "@", 
       RowBox[{"CreateDirectory", "[", "dir", "]"}]}], ";", "\n", "\t\t", 
      "dir"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"390aa5c7-7c4f-4d5e-a977-9bb87b39a4b5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dumpSymbolFile\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.760135507705349*^9},ExpressionUUID->"4f88754a-71ea-4a3b-9a74-\
f55598cfb780"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dumpSymbolFile", "[", "symbol_Symbol", "]"}], ":=", "\n", "\t", 
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"getDumpBase", "[", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"SymbolName", "[", 
        RowBox[{"Unevaluated", "[", "symbol", "]"}], "]"}], "<>", 
       "\"\<.mx\>\""}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dumpSymbolFile", "~", "SetAttributes", "~", "HoldFirst"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"5f5dab86-df1a-4818-8446-da766018696f"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dumpSymbol\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.760135510912756*^9},ExpressionUUID->"e73b5b4d-b85a-46ed-a6fa-\
1a15098afc83"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dumpSymbol", "[", "symbol_Symbol", "]"}], ":=", "\n", "\t", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"dumpSymbolFile", "[", "symbol", "]"}], ",", " ", "symbol"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"dumpSymbol", "~", "SetAttributes", "~", 
  "HoldFirst"}]}], \
"CodeInput",ExpressionUUID->"40ac8069-4a4b-4b09-9463-2ecc89bd1dbb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dumpValue\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7470c1d8-5762-4e30-86d1-c541a1263e76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dumpValue", "[", 
    RowBox[{"sym_Symbol", ",", " ", "val_", ",", " ", 
     RowBox[{"unique", ":", "True", ":", "True"}]}], "]"}], ":=", "\n", "  ", 
   
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", "=", 
       RowBox[{"Unique", "[", "sym", "]"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"u", "=", "val"}], ";", "\n", "\t  ", 
      RowBox[{"dumpSymbol", "[", "u", "]"}], ";", "\n", "\t  ", "val"}]}], 
    "\n", "\t  ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dumpValue", "[", 
   RowBox[{"sym_Symbol", ",", " ", "val_", ",", " ", 
    RowBox[{"unique", ":", "False"}]}], "]"}], ":=", "\n", "  ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u", "=", "sym"}], "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"u", "=", "val"}], ";", "\n", "\t  ", 
     RowBox[{"dumpSymbol", "[", "u", "]"}], ";", "\n", "\t  ", "val"}]}], 
   "\n", "\t  ", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"4fe69ae7-66d1-40f2-a615-06e78f36129c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]cachedLoad\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.760135545094695*^9},ExpressionUUID->"4d33ef8b-313e-49cf-88bc-\
f5789d87e254"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cachedLoad", "[", 
    RowBox[{"symbol_Symbol", ",", " ", "expr_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dsf", "=", 
       RowBox[{"dumpSymbolFile", "[", "symbol", "]"}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "dsf", "]"}], ",", " ", "\n", "\t\t\t", 
       RowBox[{"symbol", "=", 
        RowBox[{"Import", "[", "dsf", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"symbol", "=", "expr"}], ";", "\n", "\t\t\t", 
        RowBox[{"Export", "[", 
         RowBox[{"dsf", ",", " ", "symbol"}], "]"}], ";", "\n", "\t\t\t", 
        "symbol"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cachedLoad", "[", "expr_", "]"}], ":=", "\n", "\t", 
   RowBox[{"Function", "[", 
    RowBox[{"Null", ",", " ", 
     RowBox[{"cachedLoad", "[", 
      RowBox[{"#", ",", " ", "expr"}], "]"}], ",", " ", "HoldAllComplete"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cachedLoad", "~", "SetAttributes", "~", "HoldAllComplete"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"6f62583f-e83f-4276-9035-a6d4b4ef6af8"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]debugPrint\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.760187355719488*^9, 
  3.760187358307583*^9}},ExpressionUUID->"a58c63cc-1e14-485f-81d1-\
8aa9ab9773f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$debugMode", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"debugPrint", "[", "a___", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{"$debugMode", ",", " ", 
     RowBox[{"Print", "[", "a", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76018736060884*^9, 
  3.760187376144834*^9}},ExpressionUUID->"2b9747c4-c68d-44e4-b59e-\
51746a64f4c2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Misc\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"8eb33c21-cbc2-4df8-968a-31012bb44bfc"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]gridMemberQ\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c66e9ebf-7643-4473-96ea-7e6ece96dab2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"_List", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], "&"}],
         ")"}]}]}], ",", " ", "range_List", ",", " ", "transf_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"tpts", " ", "=", " ", 
        RowBox[{"transf", "@", "pts"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"checker", " ", "=", " ", 
        RowBox[{"RegionMember", "[", 
         RowBox[{"Cuboid", "@@", 
          RowBox[{"Transpose", "[", "range", "]"}]}], "]"}]}]}], "\n", 
      "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"checker", "/@", "tpts"}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"_List", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatrixQ", "[", 
          RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], "&"}],
         ")"}]}]}], ",", " ", "range_List"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"tfunc", ",", "\n", "\t\t\t", "r2"}], "\n", "\t\t\t", "}"}], 
     ",", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "pts", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], ",", "\n", "\t\t\t\t", "2", ",", 
        "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"tfunc", " ", "=", " ", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
             RowBox[{"Transpose", "[", "#", "]"}]}], "]"}], "&"}]}], ";", 
         "\n", "\t\t\t\t\t", 
         RowBox[{"r2", " ", "=", " ", 
          RowBox[{"range", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "2"}], ";;"}], "]"}], "]"}]}]}], ",", "\n", 
        "\t\t\t\t", "4", ",", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"tfunc", " ", "=", " ", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"ArrayFlatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", " ", "0"}], 
                 "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"RotationMatrix", "[", 
                   RowBox[{
                    RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}]}], "}"}]}], 
               "}"}], "]"}], ".", 
             RowBox[{"Transpose", "[", "#", "]"}]}], "]"}], "&"}]}], ";", 
         "\n", "\t\t\t\t\t", 
         RowBox[{"r2", " ", "=", " ", "range"}]}], ",", "\n", "\t\t\t\t", "_",
         ",", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"tfunc", " ", "=", " ", "Identity"}], ";", "\n", 
         "\t\t\t\t\t", 
         RowBox[{"r2", " ", "=", " ", "range"}]}]}], "\n", "\t\t\t\t", "]"}], 
      ";", "\n", "\t\t", 
      RowBox[{"gridMemberQ", "[", 
       RowBox[{"pts", ",", " ", "r2", ",", " ", "tfunc"}], "]"}]}]}], "\n", 
    "\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"_List", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"VectorQ", "[", 
          RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], "&"}],
         ")"}]}]}], ",", " ", "range_List", ",", " ", "transf_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{
    RowBox[{"gridMemberQ", "[", 
     RowBox[{
      RowBox[{"{", "pts", "}"}], ",", " ", "range", ",", " ", "transf"}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
     RowBox[{"pts", ":", 
      RowBox[{"_List", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"VectorQ", "[", 
          RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], "&"}],
         ")"}]}]}], ",", " ", "range_List"}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"gridMemberQ", "[", 
     RowBox[{
      RowBox[{"{", "pts", "}"}], ",", " ", "range"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gridMemberQ", "[", 
    RowBox[{
    "pts_", ",", " ", "i_InterpolatingFunction", ",", " ", "transf_"}], "]"}],
    ":=", "\n", "\t", 
   RowBox[{"gridMemberQ", "[", 
    RowBox[{"pts", ",", " ", 
     RowBox[{"i", "[", "\"\<Domain\>\"", "]"}], ",", " ", "transf"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"gridMemberQ", "[", 
   RowBox[{"pts_", ",", " ", "i_InterpolatingFunction"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"gridMemberQ", "[", 
   RowBox[{"pts", ",", " ", 
    RowBox[{"i", "[", "\"\<Domain\>\"", "]"}]}], 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"59371d7c-92aa-4bba-a878-071a28d39a57"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]nonlinearFitStuff\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e3883681-2f7f-48ac-af0d-00a57c44406c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonlinearFitStuff", "[", 
   RowBox[{
   "data_", ",", " ", "r_", ",", " ", "form_", ",", " ", "r0_", ",", " ", 
    "c_", ",", " ", "ops___"}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Replace", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"Thread", "[", "\n", "      ", 
     RowBox[{
      RowBox[{"ToExpression", "[", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\"\<par\>\"", "<>", 
           RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", 
           RowBox[{"form", "[", "\"\<Parameters\>\"", "]"}], "]"}], "]"}]}], 
        ",", " ", "\n", "        ", "StandardForm", ",", " ", "\n", 
        "        ", "Hold"}], "\n", "        ", "]"}], ",", "\n", "      ", 
      "Hold"}], "\n", "      ", "]"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"Hold", "[", "p__", "]"}], ":>", "\n", "      ", 
     RowBox[{"Block", "[", 
      RowBox[{"p", ",", "\n", "        ", 
       RowBox[{"With", "[", "\n", "          ", 
        RowBox[{
         RowBox[{"{", "\n", "            ", 
          RowBox[{"model", " ", "=", " ", "\n", "              ", 
           RowBox[{
            RowBox[{"form", "[", "\"\<Form\>\"", "]"}], "/.", "\n", 
            "                ", 
            RowBox[{"Join", "[", "\n", "                  ", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"form", "[", "\"\<Parameters\>\"", "]"}], "->", "p"}],
                "]"}], ",", "\n", "                  ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Point", "\[Rule]", "r0"}], ",", " ", 
                RowBox[{"Value", "\[Rule]", "c"}]}], "}"}]}], "\n", 
             "                  ", "]"}]}]}], "\n", "             ", "}"}], 
         ",", "\n", "          ", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", "\n", "            ", 
           RowBox[{
           "data", ",", "\n", "            ", "model", ",", " ", "\n", 
            "            ", "p", ",", " ", "\n", "            ", "r", ",", 
            "\n", "            ", "ops"}], "\n", "            ", "]"}], "[", 
          "\"\<Function\>\"", "]"}]}], "\n", "          ", "]"}]}], "\n", 
      "        ", "]"}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"fa1c5bfb-6f15-4000-830f-914d643b4567"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]fitExtrapForms\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e62e08d1-d77d-4784-acc7-f1ac00eb0cdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fitExtrapForms", "[", "\n", "  ", 
   RowBox[{
   "trueRotSubGrids_", ",", "\n", "  ", "pointSampling_", ",", " ", 
    "fitForms_", ",", " ", "monkeyPatch_", ",", " ", "\n", "  ", "gind1_", 
    ",", " ", "gind2_", ",", "\n", "  ", "ops___"}], "\n", "  ", "]"}], ":=", 
  "\n", "  ", 
  RowBox[{"Block", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{"r", ",", " ", "forms", ",", " ", "\n", "      ", 
      RowBox[{"nl", " ", "=", " ", 
       RowBox[{"pointSampling", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"nr", " ", "=", " ", 
       RowBox[{"pointSampling", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "      ", "gl", ",", " ",
       "gr"}], "\n", "      ", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"forms", " ", "=", " ", 
      RowBox[{"Through", "[", 
       RowBox[{"fitForms", "[", "r", "]"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"debugPrint", "[", "\"\<Fitting forms\>\"", "]"}], ";", "\n", 
     "    ", 
     RowBox[{"Map", "[", "\n", "      ", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "        ", 
        RowBox[{
         RowBox[{"gl", " ", "=", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "take", " ", "the", " ", "points", " ", "to", " ", "fit", " ", 
            "on", "the", " ", "\"\<left\>\""}], " ", "*)"}], "\n", 
          "          ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "\n", "  ", "          ", 
            RowBox[{
             RowBox[{";;", 
              RowBox[{"Min", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Replace", "[", 
                  RowBox[{"nl", ",", " ", 
                   RowBox[{
                    RowBox[{"Scaled", "[", "i_", "]"}], ":>", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"i", "*", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}]}]}], "]"}], 
                 ",", " ", 
                 RowBox[{"Length", "@", "#"}]}], "}"}]}]}], ",", "\n", 
             "            ", 
             RowBox[{"{", 
              RowBox[{"gind2", ",", " ", "3"}], "}"}]}], "\n", "            ",
             "]"}], "]"}]}], ";", "\n", "        ", 
         RowBox[{"gr", " ", "=", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "take", " ", "the", " ", "points", " ", "to", " ", "fit", " ", 
            "on", "the", " ", "\"\<right\>\""}], " ", "*)"}], "\n", 
          "          ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "\n", "            ", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Min", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Replace", "[", 
                   RowBox[{"nr", ",", " ", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "i_", "]"}], ":>", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"i", "*", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}]}]}], "]"}], 
                  ",", " ", 
                  RowBox[{"Length", "@", "#"}]}], "}"}]}]}], ";;"}], ",", 
             "\n", "            ", 
             RowBox[{"{", 
              RowBox[{"gind2", ",", " ", "3"}], "}"}]}], "\n", "            ",
             "]"}], "]"}]}], ";", "\n", "        ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"debugPrint", "[", "\"\<Generating fits...\>\"", "]"}], 
           ";"}], "*)"}], "\n", "        ", 
         RowBox[{"MapThread", "[", "\n", "          ", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data", " ", "=", " ", "#"}], ",", " ", 
                RowBox[{"r0", " ", "=", " ", 
                 RowBox[{"#3", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                RowBox[{"c", " ", "=", " ", 
                 RowBox[{"#3", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", 
              "            ", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "data", "]"}], "===", "0"}], ",", 
                 " ", "\n", "              ", 
                 RowBox[{"Throw", "[", 
                  RowBox[{
                  "\"\<?No data @ ``, ``?\>\"", "~", "TemplateApply", "~", 
                   RowBox[{"{", 
                    RowBox[{"r0", ",", " ", "c"}], "}"}]}], "]"}]}], "\n", 
                "              ", "]"}], ";", "\n", "            ", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ListQ", "@", "#2"}], ",", " ", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "linear", " ", "fitted", " ", "model", " ", "vs", " ", 
                    "non", " ", "linear", " ", "model"}], " ", "*)"}], "\n", 
                  "              ", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "debugPrint", "[", "\"\<Fitting data points...\>\"", 
                    "]"}], ";"}], "*)"}], "\n", "              ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "data"}], "\[Equal]", "1"}], ",", 
                    "\n", "                ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "single", " ", "data", " ", "points", " ", "are", " ", 
                    "always", " ", "extrapolated", " ", "as", " ", "a", " ", 
                    "constant", " ", "function"}], " ", "*)"}], "\n", "  ", 
                    "              ", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"pt", "=", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", " ", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], ",", " ", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"pt", ",", " ", 
                    RowBox[{"Length", "[", "#", "]"}]}], "]"}], "&"}]}], 
                    "]"}], ",", "\n", "                ", 
                    RowBox[{
                    RowBox[{"LinearModelFit", "[", 
                    RowBox[{
                    "data", ",", " ", "#2", ",", " ", "r", ",", " ", "ops"}], 
                    "]"}], "[", "\"\<Function\>\"", "]"}]}], "\n", 
                   "                ", "]"}], ",", "\n", "              ", 
                  RowBox[{"nonlinearFitStuff", "[", 
                   RowBox[{
                   "data", ",", " ", "r", ",", " ", "#2", ",", " ", "r0", ",",
                     " ", "c", ",", " ", "ops"}], "]"}]}], "\n", 
                 "              ", "]"}], "//", 
                RowBox[{
                 RowBox[{"monkeyPatch", "[", 
                  RowBox[{"#", ",", " ", "r0", ",", " ", "c"}], "]"}], 
                 "&"}]}]}]}], "\n", "            ", "]"}], "&"}], ",", "\n", 
           "          ", 
           RowBox[{"{", "\n", "            ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"gl", ",", " ", "gr"}], "}"}], ",", "\n", 
             "            ", "forms", ",", "\n", "            ", 
             RowBox[{"(*", " ", 
              RowBox[{"take", " ", "the", " ", "boundary", " ", "points"}], 
              " ", "*)"}], "\n", "            ", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", 
                  RowBox[{"-", "1"}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"gind2", ",", " ", "3"}], "}"}]}], "]"}], "]"}]}], 
            "\n", "            ", "}"}]}], "\n", "          ", "]"}]}], "\n", 
        "        ", "]"}], ",", "\n", "      ", "trueRotSubGrids"}], "\n", 
      "      ", "]"}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ebd10115-692d-469a-b724-f53689856fa4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]extraGridVals\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"6a9ca189-6eb5-435e-a807-d21b2d4a8975"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"extraGridVals", "[", "\n", "  ", 
    RowBox[{
    "rotSubGrids_", ",", " ", "trueRotSubGrids_", ",", "\n", "  ", "gind1_", 
     ",", " ", "gind2_", ",", "\n", "  ", "fits_"}], "\n", "  ", "]"}], ":=", 
   "\n", "  ", 
   RowBox[{"MapThread", "[", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", "\n", "      ", 
       RowBox[{
        RowBox[{"{", "\n", "        ", 
         RowBox[{
          RowBox[{"minFit", " ", "=", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
          RowBox[{"maxFit", " ", "=", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "\n", "        ", 
          RowBox[{"ptRaw", " ", "=", " ", 
           RowBox[{"#3", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "gind2"}], "]"}], "]"}]}], ",", "\n", 
          "        ", 
          RowBox[{"goodBounds", " ", "=", " ", 
           RowBox[{"MinMax", " ", "@", " ", 
            RowBox[{"#2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "gind2"}], "]"}], "]"}]}]}]}], "\n", 
         "        ", "}"}], ",", "\n", "      ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"use", " ", "the", " ", "left"}], "-", "and", "-", 
          RowBox[{
          "right", " ", "side", " ", "first", " ", "to", " ", "evaluate", " ",
            "the", " ", "smaller", " ", "and", " ", "larger", " ", 
           "points"}]}], "*)"}], "\n", "      ", 
        RowBox[{"Join", "[", "\n", "        ", 
         RowBox[{
          RowBox[{"With", "[", "\n", "          ", 
           RowBox[{
            RowBox[{"{", "\n", "            ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "get", " ", "the", " ", "points", " ", "off", " ", "the", " ", 
               "grid", " ", "too", " ", "small"}], "*)"}], "\n", 
             "            ", 
             RowBox[{"pts", "=", "\n", "              ", 
              RowBox[{"Pick", "[", 
               RowBox[{"ptRaw", ",", " ", 
                RowBox[{"UnitStep", "[", 
                 RowBox[{
                  RowBox[{"goodBounds", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
                  RowBox[{"(", 
                   RowBox[{"ptRaw", " ", "+", " ", "$MachineEpsilon"}], 
                   ")"}]}], "]"}], ",", " ", "1"}], "]"}]}], "\n", 
             "            ", "}"}], ",", "\n", "          ", 
            RowBox[{"(*", " ", 
             RowBox[{"if", " ", "there", " ", "no", " ", "points", " ", 
              RowBox[{"don", "'"}], "t", " ", "worry", " ", "about", " ", 
              "it"}], " ", "*)"}], "\n", "          ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", "pts"}], ">", "0"}], ",", "\n", 
              "            ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "recreate", " ", "the", " ", "triples", " ", "we", " ", 
                "originally", " ", "had", " ", "by", " ", "adding", " ", "a", 
                " ", "constant", " ", "slice", " ", "coordinate"}], " ", 
               "*)"}], "\n", "            ", 
              RowBox[{"Transpose", "[", "\n", "              ", 
               RowBox[{
                RowBox[{"{", "\n", "                ", 
                 RowBox[{
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"#3", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", " ", "gind1"}], "]"}], "]"}], ",", " ", 
                    
                    RowBox[{"Length", "@", "pts"}]}], "]"}], ",", "\n", "  ", 
                  "              ", "pts", ",", "\n", "  ", "              ", 
                  
                  RowBox[{"minFit", "@", "pts"}]}], " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "actual", " ", "extrapolation", " ", "to", " ", "smaller", 
                   " ", "points"}], " ", "*)"}], "\n", "  ", "              ",
                  "}"}], "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"gind1", ",", " ", "gind2", ",", " ", "3"}], "}"}], 
                 "]"}], "]"}], "\n", "  ", "              ", "]"}], ",", "\n",
               "            ", "pts"}], "\n", "           ", "]"}]}], "\n", 
           "          ", "]"}], ",", "\n", "        ", "#2", ",", "\n", 
          "        ", 
          RowBox[{"With", "[", "\n", "          ", 
           RowBox[{
            RowBox[{"{", "\n", "            ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "get", " ", "the", " ", "points", " ", "off", " ", "the", " ", 
               "grid", " ", "too", " ", "large"}], "*)"}], "\n", 
             "            ", 
             RowBox[{"pts", "=", "\n", "              ", 
              RowBox[{"Pick", "[", 
               RowBox[{"ptRaw", ",", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ptRaw", " ", "-", " ", "$MachineEpsilon"}], ")"}],
                   " ", "-", " ", 
                  RowBox[{"goodBounds", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "//", "UnitStep"}], ",", 
                " ", "1"}], "]"}]}], "\n", "            ", "}"}], ",", "\n", 
            "          ", 
            RowBox[{"(*", " ", 
             RowBox[{"if", " ", "there", " ", "no", " ", "points", " ", 
              RowBox[{"don", "'"}], "t", " ", "worry", " ", "about", " ", 
              "it"}], " ", "*)"}], "\n", "          ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", "pts"}], ">", "0"}], ",", "\n", 
              "            ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "recreate", " ", "the", " ", "triples", " ", "we", " ", 
                "originally", " ", "had", " ", "by", " ", "adding", " ", "a", 
                " ", "constant", " ", "slice", " ", "coordinate"}], " ", 
               "*)"}], "\n", "            ", 
              RowBox[{"Transpose", "[", "\n", "              ", 
               RowBox[{
                RowBox[{"{", "\n", "                ", 
                 RowBox[{
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{
                    RowBox[{"#3", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", " ", "gind1"}], "]"}], "]"}], ",", " ", 
                    
                    RowBox[{"Length", "@", "pts"}]}], "]"}], ",", "\n", "  ", 
                  "              ", "pts", ",", " ", "\n", "  ", 
                  "              ", 
                  RowBox[{"maxFit", "@", "pts"}]}], "  ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                  "actual", " ", "extrapolation", " ", "to", " ", "larger", 
                   " ", "points"}], " ", "*)"}], "\n", "  ", "              ",
                  "}"}], "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"gind1", ",", " ", "gind2", ",", " ", "3"}], "}"}], 
                 "]"}], "]"}], "\n", "              ", "]"}], ",", "\n", 
              "            ", "pts"}], "\n", "            ", "]"}]}], "\n", 
           "          ", "]"}]}], "\n", "        ", "]"}]}], "\n", "      ", 
       "]"}], "&"}], ",", "\n", "    ", 
     RowBox[{"{", "\n", "      ", 
      RowBox[{
      "fits", ",", "\n", "      ", "trueRotSubGrids", ",", "\n", "\t      ", 
       RowBox[{"KeyTake", "[", 
        RowBox[{"rotSubGrids", ",", " ", 
         RowBox[{"Keys", "[", "trueRotSubGrids", "]"}]}], "]"}]}], "\n", 
      "      ", "}"}]}], "\n", "    ", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"7a48135a-0b72-4466-ace1-69e840f6a38a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]extrapFitForms\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3a3ffdc6-7e52-457f-9ddf-6ad58e97941d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extrapFitForms", "=", "\n", "  ", 
   RowBox[{"{", "\n", "\t    ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"eh", " ", "fuck", " ", "this", " ", "form", " ", 
       RowBox[{"it", "'"}], "s", " ", "fine", " ", "to", " ", "just", " ", 
       "use", " ", "a", " ", "6"}], "-", 
      RowBox[{
      "th", " ", "order", " ", "polynomial", " ", "to", " ", "fit", " ", 
       "the", " ", "_entire", "_", " ", "potential"}]}], " ", "*)"}], "\n", 
    "      ", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", "\n", "        ", 
       RowBox[{
        RowBox[{"\"\<Form\>\"", "\[Rule]", "\n", "          ", 
         RowBox[{"{", "\n", "            ", 
          RowBox[{
           RowBox[{
            RowBox[{"C", "[", "2", "]"}], " ", "+", " ", 
            RowBox[{
             RowBox[{"C", "[", "1", "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"C", "[", "3", "]"}]}], "*", "#"}], "]"}]}]}], ",", 
           " ", "\n", "            ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"C", "[", "3", "]"}], ">", "0"}], 
            RowBox[{"(*", 
             RowBox[{",", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"C", "[", "2", "]"}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"C", "[", "1", "]"}], "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"C", "[", "3", "]"}]}], "*", "Point"}], "]"}]}]}],
                " ", "\[Equal]", " ", "Value"}]}], "*)"}], "}"}]}], "\n", 
          "            ", "}"}]}], ",", "\n", "        ", 
        RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
         RowBox[{"Array", "[", 
          RowBox[{"C", ",", " ", "3"}], "]"}]}]}], "\n", "        ", "|>"}], 
      "&"}], ",", " ", "\n", "      ", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Form\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"C", "[", "2", "]"}], "+", 
           RowBox[{
            RowBox[{"C", "[", "1", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", "#", ")"}], "^", "4"}], ")"}]}]}], ")"}]}], ",", 
        " ", 
        RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
         RowBox[{"Array", "[", 
          RowBox[{"C", ",", " ", "2"}], "]"}]}]}], "|>"}], "&"}]}], "\n", 
    "      ", "}"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"9b094e58-69f8-443d-99d0-85375b25ce9c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]extrapolatedFunction\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0a419aac-72f1-416b-b02f-2f0372da13d9"],

Cell[BoxData[{
 RowBox[{"extrapolatedFunction", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extrapolatedFunction", "[", "\n", "  ", 
    RowBox[{"fn_", ",", " ", "\n", "  ", 
     RowBox[{"cutOffs", ":", " ", 
      RowBox[{"{", "\n", "    ", 
       RowBox[{
        RowBox[{"Except", "[", 
         RowBox[{
          RowBox[{"_Integer", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0", "<", "#", "<", "1000"}], "&"}], ")"}]}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "]"}], ",", " ", "\n", "    ", 
        RowBox[{"Except", "[", 
         RowBox[{
          RowBox[{"_Integer", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0", "<", "#", "<", "1000"}], "&"}], ")"}]}], ",", " ", 
          RowBox[{"_", "?", "NumericQ"}]}], "]"}]}], "\n", "    ", "}"}], " ",
       ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"10", "^", "8"}]}], ",", " ", 
        RowBox[{"5", "*", 
         RowBox[{"10", "^", "8"}]}]}], "}"}]}], " ", "\n", "    ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "\"\<bad values\>\"", " ", "should", " ", "be", " ", "indicated", " ", 
       "by", " ", "larger", " ", "or", " ", "smaller", " ", "numbers", " ", 
       "than", " ", "this"}], " ", "*)"}], ",", "\n", "  ", 
     RowBox[{"pointSampling", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"_Scaled", "|", "_Integer"}], ",", " ", 
        RowBox[{"_Scaled", "|", "_Integer"}]}], "}"}], ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".1", "]"}], ",", " ", 
        RowBox[{"Scaled", "[", ".2", "]"}]}], "}"}]}], ",", "\n", "  ", 
     RowBox[{"fitForms", ":", " ", 
      RowBox[{"{", 
       RowBox[{"_Function", ",", " ", "_Function"}], "}"}], " ", ":", " ", 
      "extrapFitForms"}], ",", "\n", "  ", 
     RowBox[{"direction", ":", 
      RowBox[{"First", "|", "Last"}], ":", "First"}], ",", "\n", "  ", 
     RowBox[{"symmetry", ":", 
      RowBox[{"1", "|", 
       RowBox[{"-", "1"}], "|", "None"}], ":", "1"}], ",", "\n", "  ", 
     RowBox[{"def", ":", 
      RowBox[{"DefaultValue", "[", "_", "]"}], ":", 
      RowBox[{"DefaultValue", "[", "Automatic", "]"}]}], ",", "\n", "  ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "  ", "]"}], ":=", "\n",
    "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{
       RowBox[{"trueGridVals", " ", "=", " ", "\n", "        ", 
        RowBox[{"Pick", "[", 
         RowBox[{"fn", ",", "\n", "          ", 
          RowBox[{
           RowBox[{"UnitStep", "[", 
            RowBox[{
             RowBox[{"cutOffs", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
             RowBox[{"fn", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "]"}], "*", 
           "\n", "            ", 
           RowBox[{"UnitStep", "[", 
            RowBox[{
             RowBox[{"fn", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"cutOffs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", "\n", 
          "          ", "1"}], "\n", "          ", "]"}]}], ",", "\n", 
       "      ", "basePot", ",", "\n", "      ", "rotWfnGrid", ",", " ", 
       "trueGridRot", ",", "\n", "      ", "trueRotSubGrids", ",", " ", 
       "rotSubGrids", ",", "\n", "      ", "fits", ",", " ", "monkeyPatch", 
       ",", "\n", "      ", "gridVals", ",", " ", "gpts", ",", "\n", "      ",
        "gptsRegrouped", ",", " ", "fullGridRegrouped", ",", "\n", "      ", 
       "missing", ",", " ", "patchedPts", ",", "\n", "      ", 
       RowBox[{"gind1", "=", 
        RowBox[{"Replace", "[", 
         RowBox[{"direction", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "\[Rule]", "1"}], ",", " ", 
            RowBox[{"Last", "\[Rule]", "2"}]}], "}"}]}], "]"}]}], ",", "\n", 
       "      ", 
       RowBox[{"gind2", "=", 
        RowBox[{"Replace", "[", 
         RowBox[{"direction", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "\[Rule]", "2"}], ",", " ", 
            RowBox[{"Last", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ",", "\n", 
       "      ", 
       RowBox[{"dv", "=", 
        RowBox[{"def", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "      ", "}"}], ",", "\n",
      "    ", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Extracting grids\>\"", "]"}], ";", "\n",
       "    ", 
      RowBox[{"rotWfnGrid", " ", "=", " ", "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"fn", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{";;", "2"}]}], "]"}], "]"}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{"RotationMatrix", "[", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
           RowBox[{"Transpose", "[", "#", "]"}]}], "&"}]}], "//", 
        "Transpose"}]}], ";", "\n", "    ", 
      RowBox[{"trueGridRot", " ", "=", " ", "\n", "      ", 
       RowBox[{"Join", "[", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"trueGridVals", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", 
              RowBox[{";;", "2"}]}], "]"}], "]"}], "//", 
           RowBox[{
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{
               RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
             RowBox[{"Transpose", "[", "#", "]"}]}], "&"}]}], "//", 
          "Transpose"}], ",", " ", "\n", "        ", 
         RowBox[{"trueGridVals", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", " ", "\n", 
         "        ", "2"}], "\n", "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Rotating to R1/R2 space\>\"", "]"}], 
      ";", "\n", "    ", 
      RowBox[{"rotSubGrids", " ", "=", "\n", "      ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"rotWfnGrid", ",", " ", "\n", "        ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "gind1", "]"}], "]"}], ",", " ", ".00001"}], 
             "]"}], "&"}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{";;", "2"}], "]"}], "]"}], "&"}], ")"}]}], ",", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "gind2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{"trueRotSubGrids", " ", "=", " ", "\n", "      ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"trueGridRot", ",", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "gind1", "]"}], "]"}], ",", " ", ".00001"}], "]"}],
            "&"}], ")"}], ",", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "gind2", "]"}], "]"}], "&"}], "]"}]}], "]"}]}], ";", 
      "\n", "    ", 
      RowBox[{
       RowBox[{"monkeyPatch", "[", 
        RowBox[{"f_", ",", " ", "r_", ",", " ", "c_"}], "]"}], ":=", "f"}], 
      ";", "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Fitting forms\>\"", "]"}], ";", "\n", 
      "    ", 
      RowBox[{"fits", " ", "=", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "take", " ", "the", " ", "subgrids", " ", "and", " ", "extrapolate", 
         " ", "along", " ", "them"}], " ", "*)"}], "\n", "      ", 
       RowBox[{"fitExtrapForms", "[", "\n", "        ", 
        RowBox[{
        "trueRotSubGrids", ",", "\n", "        ", "pointSampling", ",", " ", 
         "fitForms", ",", " ", "\n", "  ", "      ", "monkeyPatch", ",", " ", 
         "\n", "  ", "      ", "gind1", ",", " ", "gind2", ",", "\n", "  ", 
         "      ", "ops"}], "\n", "  ", "      ", "]"}]}], ";", "\n", "    ", 
      
      RowBox[{"debugPrint", "[", "\"\<Extapolating grid values\>\"", "]"}], 
      ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "use", " ", "the", " ", "fitted", " ", "forms", " ", "to", " ", 
        "extrapolate", " ", "off", " ", "the", " ", "grid"}], " ", "*)"}], 
      "\n", "    ", 
      RowBox[{"gridVals", " ", "=", " ", "\n", "      ", 
       RowBox[{"extraGridVals", "[", 
        RowBox[{
        "rotSubGrids", ",", " ", "trueRotSubGrids", ",", " ", "gind1", ",", 
         " ", "gind2", ",", " ", "fits"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"gpts", "=", "\n", "      ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "reformat", " ", "so", " ", "that", " ", "we", " ", "have", " ", "a", 
         " ", "list", " ", "of", " ", "triples"}], "*)"}], "\n", "      ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Values", "[", "gridVals", "]"}], ",", " ", "1"}], "]"}]}], 
      ";", "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Symmetrizing grid\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"symmetry", "=!=", "None"}], ",", "\n", "      ", 
        RowBox[{"gpts", "=", "\n", "        ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "symmetrize", " ", "the", " ", "grid", " ", "of", " ", "triples"}], 
          " ", "*)"}], "\n", "        ", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", "\n", "          ", 
            RowBox[{"#", ",", "\n", "          ", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "gind2"}], "]"}], "]"}], ",", " ", 
                
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "gind1"}], "]"}], "]"}], ",", " ", 
                
                RowBox[{"symmetry", "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}]}], "}"}], 
              "]"}]}], "\n", "          ", "]"}], "&"}], "@", "gpts"}]}]}], 
       "\n", "      ", "]"}], ";", "\n", "    ", 
      RowBox[{"gpts", "=", "\n", "    ", 
       RowBox[{"DeleteDuplicatesBy", "[", 
        RowBox[{"gpts", ",", " ", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".005"}], "]"}], 
          "&"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"gpts", "=", "\n", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{"convert", " ", "back", " ", "to", " ", 
         RowBox[{"a", "/", "s"}], " ", "space"}], " ", "*)"}], "\n", "     ", 
       
       RowBox[{"Join", "[", "\n", "       ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"Pi", "/", "4"}], "]"}], ".", 
           RowBox[{"Transpose", "[", 
            RowBox[{"gpts", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", 
               RowBox[{";;", "2"}]}], "]"}], "]"}], "]"}]}], "//", 
          "Transpose"}], ",", " ", "\n", "       ", 
         RowBox[{"gpts", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", "\n", "       ", 
         "2"}], "\n", "       ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "group", " ", "extrap", " ", "points", " ", "by", " ", "a", " ", 
        RowBox[{"value", "?"}]}], " ", "*)"}], "\n", "    ", 
      RowBox[{"gptsRegrouped", " ", "=", " ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"gpts", ",", " ", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", ".005"}], "]"}], 
          "&"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"group", " ", "everything", " ", "by", " ", "a", " ", 
        RowBox[{"value", "?"}]}], " ", "*)"}], "\n", "    ", 
      RowBox[{"fullGridRegrouped", " ", "=", " ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{
         RowBox[{"fn", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", ".005"}], "]"}], 
          "&"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dumpSymbol", "[", "gptsRegrouped", "]"}], ";"}], "*)"}], 
      "\n", "    ", 
      RowBox[{
      "debugPrint", "[", "\"\<Doing secondary extrapolation\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"patchedPts", "=", "\n", "      ", 
       RowBox[{"MapThread", "[", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], " ", "=!=", " ", 
             RowBox[{"Length", "[", "#2", "]"}]}], ",", " ", "\n", 
            "          ", 
            RowBox[{"(*", " ", "\n", "                            ", 
             RowBox[{
              RowBox[{
               RowBox[{
               "I", " ", "guess", " ", "some", " ", "times", " ", "we", " ", 
                RowBox[{"don", "'"}], "t", " ", "have", " ", "the", " ", 
                "full", " ", 
                RowBox[{
                "grid", "?", " ", "\n", "                            ", 
                 "In"}], " ", "this", " ", "case", " ", "we", " ", "just", 
                " ", "extrapolate", " ", "using", " ", "a", " ", "default", 
                " ", "value"}], "..."}], " ", "\n", 
              "                            ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"originally", " ", "default", " ", "stuff"}], 
                 "..."}], " ", "dunno", " ", "what", " ", "should", " ", 
                "do"}], ")"}]}], "\n", "                      ", "*)"}], "\n",
             "         ", 
            RowBox[{"Join", "[", "\n", "           ", 
             RowBox[{"#2", ",", "\n", "           ", 
              RowBox[{"List", "/@", "\n", "             ", 
               RowBox[{
                RowBox[{"Interpolation", "[", "\n", "               ", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", " ", "3"}], "}"}]}], "]"}], "]"}], ",", 
                  " ", "\n", "               ", 
                  RowBox[{"{", "\n", "                 ", 
                   RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
                    RowBox[{"{", "\n", "                   ", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{"dv", ",", " ", 
                    RowBox[{
                    RowBox[{"n_", "?", "NumberQ"}], ":>", 
                    RowBox[{"(", 
                    RowBox[{"n", "&"}], ")"}]}]}], "]"}], ",", " ", "\n", 
                    "                   ", 
                    RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
                    "\n", "                   ", "}"}]}], "\n", 
                   "                 ", "}"}]}], "\n", "               ", 
                 "]"}], "[", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]}], ",", 
              "\n", "  ", "           ", "2"}], "\n", "             ", "]"}], 
            ",", "\n", "          ", "#"}], "\n", "          ", "]"}], "&"}], 
         ",", "\n", "       ", 
         RowBox[{"{", "\n", "         ", 
          RowBox[{
           RowBox[{"KeySort", "@", "gptsRegrouped"}], ",", "\n", "         ", 
           
           RowBox[{"KeySort", "@", "fullGridRegrouped"}]}], "\n", "         ",
           "}"}]}], "\n", "       ", "]"}]}], ";", "\n", "     ", 
      RowBox[{"Round", "[", "\n", "       ", 
       RowBox[{
        RowBox[{"Developer`ToPackedArray", "@", "\n", "         ", 
         RowBox[{"DeleteDuplicatesBy", "[", "\n", "           ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Values", "[", "patchedPts", "]"}], ",", " ", "1"}], 
            "]"}], ",", "\n", "           ", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".005"}], "]"}], 
            "&"}]}], "\n", "           ", "]"}]}], ",", "\n", "       ", 
        ".0001"}], "\n", "       ", "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"//", "Interpolation"}], "*)"}], "\n", "    ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"extrapolatedFunction", "[", "\n", "  ", 
   RowBox[{"a__", ",", "\n", "  ", "\"\<Both\>\"", ",", "\n", "  ", 
    RowBox[{"symmetry", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}], "|", "None"}], ":", "1"}], ",", "\n", "  ", 
    RowBox[{"def", ":", 
     RowBox[{"DefaultValue", "[", "_", "]"}], ":", 
     RowBox[{"DefaultValue", "[", "Automatic", "]"}]}], ",", "\n", "  ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "  ", "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dv", " ", "=", " ", 
       RowBox[{
        RowBox[{"10.", "^", "9.5"}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"Abs", "[", 
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{"def", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"Automatic", "\[RuleDelayed]", "5000"}]}], "]"}], 
          "]"}]}]}]}], ",", " ", "d1", ",", " ", "d2", ",", " ", "d3", ",", 
      " ", "d"}], "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"d1", " ", "=", " ", 
      RowBox[{"extrapolatedFunction", "[", 
       RowBox[{"a", ",", " ", "First", ",", " ", "None", ",", " ", 
        RowBox[{"DefaultValue", "[", "dv", "]"}], ",", " ", "ops"}], "]"}]}], 
     ";", "\n", "    ", 
     RowBox[{"d2", " ", "=", " ", 
      RowBox[{"extrapolatedFunction", "[", 
       RowBox[{
       "a", ",", " ", "Last", ",", " ", "symmetry", ",", " ", "def", ",", " ",
         "ops"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"d", " ", "=", " ", 
      RowBox[{"DeleteDuplicatesBy", "[", "\n", "      ", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Pick", "[", 
           RowBox[{"d1", ",", " ", 
            RowBox[{"UnitStep", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dv", "-", "10"}], ")"}], "-", 
              RowBox[{"d1", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "]"}], ",", 
            " ", "1"}], "]"}], ",", " ", "d2"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".001"}], "]"}], 
         "&"}]}], "\n", "      ", "]"}]}]}]}], "\n", "    ", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"f53d4b8a-e815-48c1-aa7c-b7a455fee701"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]lInter\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0b72853f-9316-47fe-a094-50df6b0373f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lInter", "[", 
   RowBox[{"grid_", ",", " ", "ops___"}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Module", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"{", "gtot", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"gtot", " ", "=", "\n", "    \t", 
      RowBox[{"SortBy", "[", "\n", "    \t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "]"}], "/@", "\n", 
         "    \t\t\t", 
         RowBox[{"GatherBy", "[", 
          RowBox[{"grid", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", ".01"}], "]"}], 
             "&"}], "}"}]}], "]"}]}], ",", " ", "\n", "    \t\t", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], "&"}]}], "\n", 
       "    \t\t", "]"}]}], ";", "\n", "    ", 
     RowBox[{"ListInterpolation", "[", "\n", "      ", 
      RowBox[{
       RowBox[{"gtot", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "All", ",", " ", "3"}], "]"}], "]"}], ",", 
       "\n", "      ", 
       RowBox[{
        RowBox[{"CoordinateBounds", "[", "gtot", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", "2"}], "]"}], "]"}], ",", "\n", "      ", "ops"}], 
      "\n", "      ", "]"}]}]}], "\n", "    ", "]"}]}], "\n", 
 RowBox[{"    "}]}], \
"CodeInput",ExpressionUUID->"42404172-b6b8-4700-a25d-175b77e6483c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]R1R2 Stuff\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"c2ef91f1-14c9-4992-b1b1-e149a78751b0"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getR1R2Potential\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"fdef7656-1cda-4e38-b95a-81a7cb159f85"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getR1R2Potential", "[", 
    RowBox[{"fullPot_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"a_", ",", " ", "s_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"With", "[", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"R1R2", "=", 
          RowBox[{
           RowBox[{"RotationMatrix", "[", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{"a", ",", " ", "s"}], "}"}]}]}], ",", " ", "\n", 
         "\t\t\t\t", 
         RowBox[{"bounds", "=", 
          RowBox[{"$H5PotentialRegion", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], 
        RowBox[{"(*", 
         RowBox[{"fullPot", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "3"}], "]"}], "]"}], "*)"}], "\n", "\t", 
        "\t\t\t", "}"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"R1R2", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"bounds", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<=", "#", "<", 
           RowBox[{"bounds", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], "\n", 
      "\t\t\t", "]"}], ",", "\n", "\t\t", 
     RowBox[{"H5VectorizedInterpCut", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a", ",", " ", "s", ",", " ", "Automatic", ",", " ", "Automatic"}], 
        "}"}], ",", " ", "\n", "\t\t\t", "fullPot", ",", " ", "\n", "\t\t\t", 
       "$H5PotentialRegion", ",", "\n", "\t\t\t", 
       RowBox[{"10.", "^", "9"}], ",", " ", "\n", "\t\t\t", "0."}], "\n", 
      "\t\t\t", "]"}], ",", "\n", "\t\t", "$Failed"}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"93b95d2a-9b74-4abf-a250-18690369ad3c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getR1R2PotentialMin\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"39781438-f126-47d4-bd7e-c790af17fede"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getR1R2PotentialMin", "[", 
   RowBox[{
    RowBox[{"shit_:", "None"}], ",", " ", "potGenerator_", ",", " ", 
    "r1r2grid_", ",", " ", "saGrid_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"AssociationMap", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pot", "=", 
         RowBox[{"potGenerator", "[", "#", "]"}]}], "}"}], ",", "\n", "\t", 
       "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pot", "=!=", "$Failed"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Min", "[", 
          RowBox[{"pot", "@", 
           RowBox[{"r1r2grid", "[", "\"\<Points\>\"", "]"}]}], "]"}], ",", 
         "\n", "\t\t\t\t", "$Failed"}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t",
       "\t\t", "]"}], "&"}], ",", "\n", "\t\t", 
    RowBox[{"saGrid", "@", "\"\<Points\>\""}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"004df0b2-4ac6-4c8f-95ae-0b220af82ea7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getR1R2Wavefunctions\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9ab033b4-18e2-4678-a0f8-9b8a1915dbfe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getR1R2Wavefunctions", "[", 
   RowBox[{
   "dvr_", ",", " ", "potGenerator_", ",", " ", "r1r2grid_", ",", " ", 
    "saGrid_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"AssociationMap", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pot", "=", 
         RowBox[{"potGenerator", "[", "#", "]"}]}], "}"}], ",", "\n", "\t", 
       "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pot", "=!=", "$Failed"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"dvr", "[", "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<Wavefunctions\>\"", ",", "\n", "\t\t\t\t\t", 
           RowBox[{
           "\"\<PotentialEnergy\>\"", "\[Rule]", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"Band", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "->", 
              RowBox[{"pot", "@", 
               RowBox[{"r1r2grid", "[", "\"\<Points\>\"", "]"}]}]}], "]"}]}], 
           ",", "\n", "\t\t\t\t\t", 
           RowBox[{"\"\<Grid\>\"", "->", "r1r2grid"}], ",", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"\"\<ArnoldiIterations\>\"", "\[Rule]", "5000"}], ",", 
           "\n", "\t", "\t\t\t\t", 
           RowBox[{"\"\<NodelessGroundState\>\"", "\[Rule]", "True"}]}], "\n",
           "\t", "\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t\t", "$Failed"}], 
        "\n", "\t", "\t\t\t", "]"}]}], "\n", "\t", "\t\t", "]"}], "&"}], ",", 
    "\n", "\t\t", 
    RowBox[{"saGrid", "@", "\"\<Points\>\""}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"2424dd6e-9a2a-414c-9cd3-5fd72763b473"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Phase Corrections\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.757304590763949*^9, 
  3.757304597120837*^9}},ExpressionUUID->"8d845ef7-a6e1-449e-9a1a-\
fc69a1ff03c0"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]meanShiftedWavefunctions\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"08a962de-a8a0-46d8-b8fe-f16691705e98"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shiftWfGrid", "[", 
    RowBox[{"nearest_", ",", "baseGrid_", ",", " ", "vals_"}], "]"}], ":=", 
   "\n", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mean", "=", 
       RowBox[{
        RowBox[{"nearest", "[", 
         RowBox[{"Mean", "[", 
          RowBox[{"WeightedData", "[", 
           RowBox[{"baseGrid", ",", " ", 
            RowBox[{"Abs", "@", "vals"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "baseGrid", "]"}], "-", "mean"}], "//", 
      "Transpose"}]}], "\n", "    ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanShiftedWavefunctions", "[", "wfns_WavefunctionsObject", "]"}],
    ":=", "\n", "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{
      "baseGrid", ",", "\n", "      ", "nfunc", ",", "\n", "      ", "shifts",
        ",", "\n", "      ", "newGrids", ",", "\n", "      ", "gridBits", ",",
        "\n", "      ", "zeroGrid", ",", "\n", "      ", "fullGrid", ",", 
       "\n", "      ", "newWfns", ",", "\n", "      ", "newWfns2", ",", "\n", 
       "      ", "newWfnsGrid", ",", "\n", "      ", "grids"}], "\n", 
      "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"baseGrid", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"wfns", "@", "\"\<Grid\>\""}], "]"}], ",", " ", "1"}], 
        "]"}]}], ";", "\n", "    ", 
      RowBox[{"nfunc", "=", 
       RowBox[{"Nearest", "[", "baseGrid", "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"shift", " ", "the", " ", "original", " ", "grids"}], " ", 
       "*)"}], "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Shifting core grids\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newGrids", " ", "=", " ", "\n", "      ", 
       RowBox[{"Map", "[", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", "\n", "  ", "        ", 
           RowBox[{
            RowBox[{"shiftWfGrid", "[", 
             RowBox[{"nfunc", ",", " ", "baseGrid", ",", " ", 
              RowBox[{"Flatten", "@", 
               RowBox[{"#", "[", "\"\<Values\>\"", "]"}]}]}], "]"}], ",", 
            "\n", "          ", 
            RowBox[{"List", "/@", 
             RowBox[{"Flatten", "[", 
              RowBox[{"#", "[", "\"\<Values\>\"", "]"}], "]"}]}], ",", "\n", 
            "  ", "        ", "2"}], "\n", "  ", "        ", "]"}], "&"}], 
         ",", "\n", "  ", "      ", 
         RowBox[{"wfns", "[", "\"\<Wavefunctions\>\"", "]"}]}], "\n", 
        "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dumpSymbol", "[", "newGrids", "]"}], ";"}], "*)"}], "\n", 
      "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "determine", " ", "what", " ", "the", " ", "tensor", " ", "product", 
        " ", "grid", " ", "parts", " ", "would", " ", "be"}], " ", "*)"}], 
      "\n", "    ", 
      RowBox[{"gridBits", "=", "\n", "      ", 
       RowBox[{
        RowBox[{"Sort", "@*", 
         RowBox[{"DeleteDuplicatesBy", "[", 
          RowBox[{
           RowBox[{"Round", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"10.", "^", 
              RowBox[{"-", "3"}]}]}], "]"}], "&"}], "]"}], "@*", "Flatten"}], 
        "/@", 
        RowBox[{"{", "\n", "        ", 
         RowBox[{
          RowBox[{"newGrids", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], 
          ",", "\n", "        ", 
          RowBox[{"newGrids", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "2"}], "]"}], "]"}]}], 
         "\n", "        ", "}"}]}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "make", " ", "the", " ", "full", " ", "grid", " ", "that", " ", 
        "every", " ", "wavefunction", " ", "will", " ", "live", " ", "on"}], 
       " ", "*)"}], "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Constructing full grid\>\"", "]"}], ";",
       "\n", "    ", 
      RowBox[{"fullGrid", "=", 
       RowBox[{"Tuples", "[", "gridBits", "]"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "but", " ", "zero", " ", "out", " ", "undefined", " ", "parts"}], " ", 
       "*)"}], "\n", "    ", 
      RowBox[{"zeroGrid", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"fullGrid", ",", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0.", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "@", "fullGrid"}], ",", " ", "1"}], "}"}]}], 
          "]"}], ",", " ", "2"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{
      "debugPrint", "[", "\"\<Reconstructing wavefunctions\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newWfns", "=", 
       RowBox[{"(*", " ", 
        RowBox[{"fill", " ", "out", " ", "the", " ", "entire", " ", "grid"}], 
        " ", "*)"}], "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"DeleteDuplicatesBy", "[", "\n", "        ", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"#", ",", " ", "zeroGrid"}], "]"}], ",", " ", "\n", 
           "        ", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", 
              RowBox[{"10.", "^", 
               RowBox[{"-", "3"}]}]}], "]"}], "&"}]}], "\n", "        ", 
          "]"}], "&"}], "/@", "newGrids"}]}], ";", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dumpSymbol", "[", "newWfns", "]"}], ";"}], "*)"}], "\n", 
      "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "up", " ", "the", " ", "new", " ", "wavefunctions"}], " ", 
       "*)"}], "\n", "    ", 
      RowBox[{"newWfns", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"Ordering", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", 
                 RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
              RowBox[{"10.", "^", 
               RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@",
         "newWfns"}]}], ";", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"newWfns2", " ", "=", " ", "newWfns"}], ";"}], "*)"}], "\n", 
      "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dumpSymbol", "[", "newWfns2", "]"}], ";"}], "*)"}], "\n", 
      "    ", 
      RowBox[{"grids", " ", "=", " ", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Map", "[", 
         RowBox[{"Sort", ",", " ", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"newWfns", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "All", ",", " ", 
               RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
            RowBox[{"10.", "^", 
             RowBox[{"-", "2"}]}]}], "]"}]}], "]"}]}]}], ";", "\n", "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "grids"}], ">", "1"}], ",", " ", "\n", 
        "      ", 
        RowBox[{
         RowBox[{"debugPrint", "[", 
          RowBox[{"\"\<`` distinct grids\>\"", "~", "TemplateApply", "~", 
           RowBox[{"Length", "[", "grids", "]"}]}], "]"}], ";", "\n", 
         "      ", 
         RowBox[{"dumpSymbol", "[", "grids", "]"}]}]}], "\n", "      ", "]"}],
       ";", "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Making grid functions\>\"", "]"}], ";", 
      "\n", "    ", 
      RowBox[{"newWfnsGrid", "=", 
       RowBox[{"(*", " ", 
        RowBox[{
        "by", " ", "making", " ", "a", " ", "new", " ", "full", " ", 
         "coordinate", " ", "grid"}], " ", "*)"}], "\n", "      ", 
       RowBox[{"CoordinateGridObject", "@", "\n", "        ", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"newWfns", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "All", ",", " ", 
             RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", 
          RowBox[{"Length", "@", 
           RowBox[{"gridBits", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}], ";", "\n", "    ", 
      
      RowBox[{"debugPrint", "@", "\n", "      ", 
       RowBox[{"TemplateApply", "[", "\n", "        ", 
        RowBox[{
        "\"\<`` wavefunctions with length `` and grid of dimension ``\>\"", 
         ",", "\n", "        ", 
         RowBox[{"{", "\n", "          ", 
          RowBox[{
           RowBox[{"Length", "@", "newWfns"}], ",", "\n", "  ", "        ", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Length", "/@", "newWfns"}], "]"}], ",", "\n", "  ", 
           "        ", 
           RowBox[{"Dimensions", "[", "newWfnsGrid", "]"}]}], "\n", 
          "          ", "}"}]}], "\n", "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"newWfns", " ", "=", " ", "\n", "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"GridFunctionObject", "[", 
          RowBox[{"newWfnsGrid", ",", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
         "newWfns"}]}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "and", " ", "then", " ", "finally", " ", "constructing", " ", "a", " ",
         "new", " ", "WavefunctionsObject"}], " ", "*)"}], "\n", "    ", 
      RowBox[{"debugPrint", "[", "\"\<Making wavefunction object\>\"", "]"}], 
      ";", "\n", "    ", 
      RowBox[{"WavefunctionsObject", "[", "\n", "      ", 
       RowBox[{
        RowBox[{"{", "\n", "        ", 
         RowBox[{
          RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], ",", "\n", 
          "        ", "newWfns"}], "\n", "        ", "}"}], ",", "\n", 
        "      ", "newWfnsGrid"}], "\n", "      ", "]"}]}]}], "\n", "    ", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"meanShiftedWavefunctions", "[", "wfList_", "]"}], ":=", "\n", 
   "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "      ", 
      RowBox[{
       RowBox[{"nonFailedPos", "=", 
        RowBox[{"Pick", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "@", "wfList"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", "wfList"}]}], 
         "]"}]}], ",", "\n", "      ", "nonFailedWfns", ",", "\n", "      ", 
       "shifted", ",", "\n", "      ", 
       RowBox[{"flatWfList", " ", "=", " ", 
        RowBox[{"Flatten", "[", "wfList", "]"}]}], ",", "\n", "      ", 
       "newWfnsList"}], "\n", "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Mean shifting wavefunctions\>\"", "]"}],
       ";", "\n", "    ", 
      RowBox[{"nonFailedWfns", " ", "=", " ", "\n", "      ", 
       RowBox[{"WavefunctionsObject", "[", "\n", "        ", 
        RowBox[{
         RowBox[{"{", "\n", "          ", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"Length", "@", "nonFailedPos"}]}], "]"}], ",", "\n", 
           "          ", 
           RowBox[{"flatWfList", "[", 
            RowBox[{"[", "nonFailedPos", "]"}], "]"}]}], "\n", "          ", 
          "}"}], ",", "\n", "        ", 
         RowBox[{
          RowBox[{"flatWfList", "[", 
           RowBox[{"[", 
            RowBox[{"nonFailedPos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "@", 
          "\"\<Grid\>\""}]}], "\n", "        ", "]"}]}], ";", "\n", "    ", 
      RowBox[{"shifted", " ", "=", " ", 
       RowBox[{"meanShiftedWavefunctions", "[", "nonFailedWfns", "]"}]}], ";",
       "\n", "    ", 
      RowBox[{
      "debugPrint", "[", "\"\<Reconstructing wavefunction list\>\"", "]"}], 
      ";", "\n", "    ", 
      RowBox[{"newWfnsList", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"$Failed", ",", " ", 
         RowBox[{"Length", "@", "wfList"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{
       RowBox[{"newWfnsList", "[", 
        RowBox[{"[", "nonFailedPos", "]"}], "]"}], " ", "=", " ", "\n", 
       "      ", 
       RowBox[{
        RowBox[{
         RowBox[{"WavefunctionsObject", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "0", "}"}], ",", " ", 
             RowBox[{"{", "#", "}"}]}], "}"}], ",", " ", 
           RowBox[{"#", "[", "\"\<Grid\>\"", "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"shifted", "[", "\"\<Wavefunctions\>\"", "]"}]}]}], ";", "\n",
       "    ", "newWfnsList"}]}], "\n", "    ", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"c9b474bb-76df-4e54-a9b8-a620a750ca1f"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]rephaseThingies\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"bbc7a2d8-6b0a-4aff-a566-0c1cbc7e3f50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rephaseThingies", "=", "\n", "\t", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"overlaps", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"init", ",", " ", "_Integer"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"tol", ",", " ", "_Real"}], "}"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"prev", ",", " ", "el", ",", " ", 
         RowBox[{"ov", "=", "overlaps"}], ",", 
         RowBox[{"swapEl", "=", "init"}]}], "}"}], ",", "\n", "\t\t\t", 
       RowBox[{"Prepend", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Table", "[", "\n", "\t\t\t\t  ", 
          RowBox[{"(*", " ", "\n", "\t\t\t\t  ", 
           RowBox[{
            RowBox[{
            "if", " ", "the", " ", "previous", " ", "one", " ", "had", " ", 
             "to", " ", "be", " ", "flipped", " ", "and", " ", "the", " ", 
             "next", " ", "one", " ", "and", " ", "it", " ", "have", " ", 
             "the", " ", "same", " ", "sign", " ", "the", " ", "next", " ", 
             "one", "\n", "\t\t\t\t  ", "should", " ", "also", " ", "be", " ",
              "flipped"}], ",", " ", 
            RowBox[{
             RowBox[{"I", " ", "think"}], "..."}]}], "\n", "\t\t\t\t  ", 
           "*)"}], "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"el", "=", 
             RowBox[{"ov", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", "\t\t\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"el", "<", 
               RowBox[{"-", "tol"}]}], ",", " ", 
              RowBox[{"swapEl", "=", 
               RowBox[{"-", "swapEl"}]}]}], "]"}], ";", "\n", "\t\t\t\t\t", 
            "swapEl"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Length", "@", "ov"}]}], "}"}]}], "\n", "\t\t\t\t\t", 
          "]"}], ",", "\n", "\t\t\t\t", "init"}], "\n", "\t\t\t\t", "]"}]}], 
      "\n", "\t\t\t", "]"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\n", "\t\t", 
      RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "*)"}], "\n", 
    "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"26b2e443-d21b-4874-a93a-195eb1443645"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]rephaseWfns\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ec325231-2541-4778-a3fb-082a17d897c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rephaseWfns", "[", 
   RowBox[{"s_", ",", " ", "wfns_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"WavefunctionsObject", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], ",", " ", "\n", 
      "\t\t\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Scale", "[", 
          RowBox[{"#", ",", " ", "s"}], "]"}], "&"}], ",", " ", 
        RowBox[{"wfns", "[", "\"\<Wavefunctions\>\"", "]"}]}], "]"}]}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"wfns", "[", "\"\<Grid\>\"", "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8e5a7987-57b9-4d22-aff0-c0683f485bca"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]generalizedPhaseCorrection\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"26ac95aa-c7aa-4f07-bbfd-6677ad7215aa"],

Cell[BoxData[{
 RowBox[{"generalizedPhaseCorrection", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generalizedPhaseCorrection", "[", "\n", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data_", ",", " ", "validTest_", ",", " ", "prep_", ",", " ", 
       "metric_"}], "}"}], ",", "\n", "\t", "grid_", ",", "\n", "\t", 
     RowBox[{"basePhase", ":", 
      RowBox[{"1", "|", 
       RowBox[{"-", "1"}]}], ":", "1"}], ",", "\n", "\t", 
     RowBox[{"defaultOrder", ":", 
      RowBox[{"First", "|", "Last"}], ":", "First"}], ",", "\n", "\t", 
     RowBox[{"tol", ":", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"IntegerQ", "[", "#", "]"}]}], "||", 
            RowBox[{"#", "\[Equal]", "0"}]}], ")"}]}], "&"}], ")"}]}], ":", 
      "0."}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"pos", ",", "\n", "\t\t\t", 
       RowBox[{"gridPoints", "=", 
        RowBox[{"grid", "[", "\"\<Points\>\"", "]"}]}], ",", "\n", "\t\t\t", 
       "cleanGrid", ",", "\n", "\t\t\t", "cleanGridSorted", ",", "\n", 
       "\t\t\t", "gridReordering", ",", "\n", "\t\t\t", "gridPositions", ",", 
       "\n", "\t\t\t", "reorderedWfs", ",", "\n", "\t\t\t", 
       "rephasedWavefunctions", ",", "\n", "\t\t\t", "fullData", ",", "\n", 
       "\t\t\t", "overlaps", ",", "\n", "\t\t\t", "phases", ",", "\n", 
       "\t\t\t", "orderComplement", ",", "\n", "\t\t\t", "phaseVector", ",", 
       "\n", "\t\t\t", "reorderedData", ",", "\n", "\t\t\t", 
       "rephasingData"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"pos", "=", 
       RowBox[{"Pick", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "data", "]"}], "]"}], ",", " ", 
         RowBox[{"validTest", "/@", "data"}]}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"cleanGrid", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"grid", "[", 
           RowBox[{"[", "pos", "]"}], "]"}], ".", 
          RowBox[{"RotationMatrix", "[", 
           RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", " ", ".001"}], "]"}]}], 
      ";", "\n", "\t\t", 
      RowBox[{"rephasingData", "=", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Table", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"cleanGridSorted", "=", "\n", "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"EvenQ", "[", 
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
                  "Reverse", ",", " ", "Identity"}], "]"}], "@", "#"}], "&"}],
               "]"}], "@", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{"SortBy", "[", "\n", "\t", "\t", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"SortBy", "[", 
                  RowBox[{"#", ",", " ", 
                   RowBox[{"sorting", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "/@", 
                RowBox[{"GatherBy", "[", 
                 RowBox[{"cleanGrid", ",", " ", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"sorting", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "&"}]}], 
                 "]"}]}], ",", " ", "\n", "\t", "\t", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", " ", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}]}], "\n", "\t",
               "\t", "\t\t\t\t\t", "]"}]}]}], ";", "\n", "\t", "\t", "\t\t", 
           RowBox[{"gridReordering", "=", "\n", "\t", "\t", "\t\t\t", 
            RowBox[{"Flatten", "@", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{"Lookup", "[", 
              RowBox[{
               RowBox[{"PositionIndex", "[", "cleanGrid", "]"}], ",", " ", 
               RowBox[{"Flatten", "[", 
                RowBox[{"cleanGridSorted", ",", " ", "1"}], "]"}]}], 
              "]"}]}]}], ";", "\n", "\t\t\t\t", 
           RowBox[{"gridPositions", "=", 
            RowBox[{"pos", "[", 
             RowBox[{"[", "gridReordering", "]"}], "]"}]}], ";", "\n", 
           "\t\t\t\t", 
           RowBox[{"reorderedData", "=", 
            RowBox[{"data", "[", 
             RowBox[{"[", "gridPositions", "]"}], "]"}]}], ";", "\n", 
           "\t\t\t\t", 
           RowBox[{"fullData", "=", "\n", "\t\t\t\t  ", 
            RowBox[{"prep", "[", 
             RowBox[{"reorderedData", ",", " ", "\n", "  \t\t\t\t  ", 
              RowBox[{"<|", "\n", "            ", 
               RowBox[{
                RowBox[{
                "\"\<GridReordering\>\"", "\[Rule]", "gridReordering"}], ",", 
                "\n", "            ", 
                RowBox[{"\"\<GridPositions\>\"", "->", "gridPositions"}], ",",
                 "\n", "            ", 
                RowBox[{"\"\<GridPoints\>\"", "\[Rule]", 
                 RowBox[{"grid", "[", 
                  RowBox[{"[", "gridPositions", "]"}], "]"}]}]}], "\n", 
               "            ", "|>"}]}], "\n", "  \t\t\t\t  ", "]"}]}], ";", 
           "\n", "\t\t\t\t", 
           RowBox[{"overlaps", "=", "\n", "\t\t\t\t  ", 
            RowBox[{"Developer`ToPackedArray", "[", "\n", "\t\t\t\t    ", 
             RowBox[{"metric", "[", "\n", "\t\t\t\t      ", 
              RowBox[{"fullData", ",", "\n", "  \t\t\t\t    ", 
               RowBox[{"<|", "\n", "  \t\t\t\t      ", 
                RowBox[{
                 RowBox[{"\"\<ValidData\>\"", "\[Rule]", "pos"}], ",", "\n", 
                 "              ", 
                 RowBox[{
                 "\"\<GridReordering\>\"", "\[Rule]", "gridReordering"}], ",",
                  "\n", "  ", "            ", 
                 RowBox[{"\"\<GridPositions\>\"", "->", "gridPositions"}], 
                 ",", "\n", "              ", 
                 RowBox[{"\"\<GridPoints\>\"", "\[Rule]", 
                  RowBox[{"grid", "[", 
                   RowBox[{"[", "gridPositions", "]"}], "]"}]}]}], "\n", 
                "              ", "|>"}]}], "\n", "            ", "]"}], "\n",
              "          ", "]"}]}], ";", "\n", "\t\t\t\t", 
           RowBox[{"phases", "=", 
            RowBox[{"rephaseThingies", "[", 
             RowBox[{
              RowBox[{"Normal", "@", 
               RowBox[{"Diagonal", "[", 
                RowBox[{"overlaps", ",", " ", "1"}], "]"}]}], ",", " ", 
              "basePhase", ",", " ", "tol"}], "]"}]}], ";", "\n", "\t\t\t\t", 
           
           RowBox[{"orderComplement", "=", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "@", "data"}], "]"}], ",", " ", 
              "gridPositions"}], "]"}]}], ";", "\n", "\t\t\t\t", 
           RowBox[{"phaseVector", "=", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"phases", ",", " ", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{"$Failed", ",", " ", 
                 RowBox[{"Length", "@", "orderComplement"}]}], "]"}]}], "]"}],
              "[", 
             RowBox[{"[", "\n", "\t", "\t", "\t\t\t\t", 
              RowBox[{"Ordering", "@", 
               RowBox[{"Join", "[", 
                RowBox[{"gridPositions", ",", " ", "orderComplement"}], 
                "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], "]"}]}], ";", "\n", 
           "\t\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t\t", 
            RowBox[{
            "gridReordering", ",", "\n", "\t\t\t\t\t", "phaseVector"}], "\n", 
            "\t\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"sorting", ",", " ", 
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"defaultOrder", "===", "First"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"Last", ",", " ", "1"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"First", ",", " ", "2"}], "}"}]}], "]"}], "}"}]}], 
           "}"}]}], "\n", "\t\t\t\t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{"gridReordering", ",", "\n", "\t\t\t", "phaseVector"}], "\n", 
        "\t\t\t", "}"}], " ", "=", " ", "rephasingData"}], ";", "\n", "\t\t", 
      
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rephasingData", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], " ", "=!=", " ", 
           RowBox[{"rephasingData", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", " ", "2"}], "]"}], "]"}]}], ",", "\n", 
          "\t\t\t", 
          RowBox[{
          "Print", "[", 
           "\"\<Rephasing disagreement by sampling direction. Be \
careful.\>\"", "]"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{"gridReordering", ",", "\n", "\t\t\t", "phaseVector"}], 
          "\n", "\t\t\t", "}"}], " ", "=", " ", "\n", "\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"defaultOrder", "===", "First"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"rephasingData", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"rephasingData", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "\n", "\t\t\t\t", "]"}]}], 
        ";"}], "*)"}], "\n", "\t\t", 
      RowBox[{"<|", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"\"\<PhaseVector\>\"", "\[Rule]", "phaseVector"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"\"\<Positions\>\"", "\[Rule]", "pos"}], ",", "\n", "\t\t\t", 
        
        RowBox[{"\"\<Ordering\>\"", "->", "gridPositions"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"\"\<Phases\>\"", "\[Rule]", "phases"}]}], "\n", "\t\t\t", 
       "|>"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"19bed873-9326-4f1a-a208-f8c767b0f985"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPhaseCorrection\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8c11c5c9-5629-4d37-9700-1b975842b63f"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]prepPCWfns\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"9c3910ac-41b6-432b-b448-ce4ec702813e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"prepPCWfns", "[", "state_", "]"}], "[", 
    RowBox[{"reorderedWfs_", ",", " ", "___"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"WavefunctionsObject", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"Flatten", "/@", "\n", "      ", 
      RowBox[{"Transpose", "[", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], "[", 
            RowBox[{"[", "state", "]"}], "]"}]}], "}"}], "&"}], "/@", "\n", 
        "        ", "reorderedWfs"}], "\n", "        ", "]"}]}], ",", "\n", 
     "     ", 
     RowBox[{
      RowBox[{"reorderedWfs", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], "\n", 
    "     ", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"3614123a-af2e-4ca7-bf6e-53717e8d7e6c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPhaseCorrection\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"542c9125-4132-42a0-a802-90110cb8e54a"],

Cell[BoxData[{
 RowBox[{"getPhaseCorrection", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getPhaseCorrection", "[", 
    RowBox[{"wfs_List", ",", " ", "\n", "\t", "grid_", ",", "\n", "\t", 
     RowBox[{"state", ":", 
      RowBox[{"{", 
       RowBox[{"_Integer", "?", "IntegerQ"}], "}"}], ":", 
      RowBox[{"{", "2", "}"}]}], ",", "\n", "\t", 
     RowBox[{"basePhase", ":", 
      RowBox[{"1", "|", 
       RowBox[{"-", "1"}]}], ":", "1"}], ",", "\n", "\t", 
     RowBox[{"rephase", ":", 
      RowBox[{"True", "|", "False"}], ":", "False"}], ",", "\n", "\t", 
     RowBox[{"defaultOrder", ":", 
      RowBox[{"First", "|", "Last"}], ":", "First"}], ",", "\n", "\t", 
     RowBox[{"meanShift", ":", 
      RowBox[{
       RowBox[{"\"\<Shift\>\"", "[", "True", "]"}], "|", 
       RowBox[{"\"\<Shift\>\"", "[", "False", "]"}]}], ":", 
      RowBox[{"\"\<Shift\>\"", "[", "True", "]"}]}], ",", "\n", "\t", 
     RowBox[{"tol", ":", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"IntegerQ", "[", "#", "]"}]}], "||", 
            RowBox[{"#", "\[Equal]", "0"}]}], ")"}]}], "&"}], ")"}]}], ":", 
      "0."}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t  ", 
      RowBox[{
      "pc", ",", "\n", "\t\t  ", "mc", ",", "\n", "\t\t  ", "newWfns", ",", 
       "\n", "\t\t  ", 
       RowBox[{"ms", " ", "=", " ", 
        RowBox[{"meanShift", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "\t\t  ", "}"}], ",", "\n",
      "\t\t", 
     RowBox[{
      RowBox[{"mc", " ", "=", " ", "\n", "\t\t  ", 
       RowBox[{"If", "[", 
        RowBox[{"ms", ",", "\n", "  \t\t  ", 
         RowBox[{"meanShiftedWavefunctions", "[", "\n", "  \t\t    ", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
              RowBox[{
               RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], "[", 
               RowBox[{"[", "state", "]"}], "]"}]}], "]"}], "&"}], "/@", 
           "wfs"}], "\n", "  \t\t    ", "]"}], ",", "\n", "  \t\t  ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
             RowBox[{"#", "[", 
              RowBox[{"[", "state", "]"}], "]"}]}], "]"}], "&"}], "/@", 
          "wfs"}]}], "\n", "\t\t    ", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"pc", " ", "=", " ", "\n", "\t\t  ", 
       RowBox[{"generalizedPhaseCorrection", "[", "\n", "  \t\t  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mc", ",", " ", 
           RowBox[{"MatchQ", "[", "_WavefunctionsObject", "]"}], ",", " ", 
           RowBox[{"prepPCWfns", "[", "state", "]"}], ",", " ", 
           RowBox[{
            RowBox[{"#", "@", 
             RowBox[{"\"\<Overlaps\>\"", "[", "#", "]"}]}], "&"}]}], "}"}], 
         ",", "\n", "  \t\t  ", "grid", ",", "\n", "  \t\t  ", "basePhase", 
         ",", "\n", "  \t\t  ", "defaultOrder", ",", "\n", "  \t\t  ", 
         "tol"}], "\n", "  \t\t  ", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"rephase", ",", "\n", "\t\t\t", 
        RowBox[{"newWfns", "=", "\n", "\t\t\t\t", 
         RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
              RowBox[{"rephaseWfns", "[", 
               RowBox[{"#", ",", " ", "#2"}], "]"}]}], "]"}], "&"}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"pc", "[", "\"\<PhaseVector\>\"", "]"}], ",", " ", 
             "wfs"}], "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"newWfns", "=", "None"}]}], "\n", "\t\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"Prepend", "[", 
       RowBox[{"pc", ",", " ", 
        RowBox[{"\"\<Wavefunctions\>\"", "\[Rule]", "newWfns"}]}], "]"}]}]}], 
    "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"f755f811-83be-406b-a423-79f5e1500210"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPhaseCorrection\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"bdf01958-0423-4693-ba27-7cfce263a955"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPhaseCorrection", "[", "\n", "\t", 
   RowBox[{"wfs_List", ",", " ", "\n", "\t", "grid_", ",", "\n", "\t", 
    RowBox[{"states", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_Integer", "?", "IntegerQ"}], ",", " ", 
       RowBox[{"__Integer", "?", "IntegerQ"}]}], "}"}]}], ",", "\n", "\t", 
    RowBox[{"basePhases", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}], "|", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "|", 
          RowBox[{"-", "1"}]}], ")"}], ".."}], "}"}]}], ":", "1"}], ",", "\n",
     "\t", 
    RowBox[{"rephase", ":", 
     RowBox[{"True", "|", "False"}], ":", "True"}], ",", "\n", "\t", 
    RowBox[{"meanShift", ":", 
     RowBox[{
      RowBox[{"\"\<Shift\>\"", "[", "True", "]"}], "|", 
      RowBox[{"\"\<Shift\>\"", "[", "False", "]"}]}], ":", 
     RowBox[{"\"\<Shift\>\"", "[", "True", "]"}]}], ",", "\n", "\t", 
    RowBox[{"tol", ":", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"IntegerQ", "[", "#", "]"}]}], "||", 
           RowBox[{"#", "\[Equal]", "0"}]}], ")"}]}], "&"}], ")"}]}], ":", 
     "0."}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"wfSets", ",", " ", "rephasing", ",", " ", "newWfns"}], "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"wfSets", "=", "\n", "\t\t  ", 
      RowBox[{"Table", "[", "\n", "  \t\t  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "state", "}"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
          "wfs"}], ",", " ", "\n", "  \t\t  ", 
        RowBox[{"{", 
         RowBox[{"state", ",", " ", "states"}], "}"}]}], "\n", "  \t\t  ", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"rephasing", "=", "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"getPhaseCorrection", "[", 
          RowBox[{"#", ",", " ", "grid", ",", " ", 
           RowBox[{"{", "1", "}"}], ",", " ", "#2", ",", " ", "False", ",", 
           " ", "meanShift", ",", " ", "tol"}], "]"}], "&"}], ",", " ", "\n", 
        "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{"wfSets", ",", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"basePhases", ",", " ", 
              RowBox[{"Length", "@", "wfSets"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"Length", "@", "wfSets"}]}], "]"}], "]"}]}], "\n", 
         "\t\t\t\t\t", "}"}]}], " ", "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
     "\t ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"dumpSymbol", "[", "rephasing", "]"}], ";", "\n", "\t ", 
       RowBox[{"dumpSymbol", "[", "meanShiftedWfSets", "]"}], ";"}], "*)"}], 
     "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"rephase", ",", "\n", "\t\t\t", 
       RowBox[{"newWfns", "=", "\n", "\t\t\t\t", 
        RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
             RowBox[{"Join", "[", "##", "]"}]}], "]"}], "&"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
                  RowBox[{"rephaseWfns", "[", 
                   RowBox[{"#", ",", " ", "#2"}], "]"}]}], "]"}], "&"}], ",", 
               "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", "\"\<PhaseVector\>\"", "]"}], ",", " ", 
                 "#2"}], "}"}]}], "\n", "\t\t\t\t\t\t\t", "]"}], "&"}], ",", 
            "\n", "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"rephasing", ",", " ", "wfSets"}], "}"}]}], "\n", 
           "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"newWfns", "=", "None"}]}], "\n", "\t\t\t", "]"}], ";", "\n", 
     "\t\t", 
     RowBox[{"<|", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Wavefunctions\>\"", "->", "newWfns"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<Rephasings\>\"", "->", "rephasing"}]}], "\n", "\t\t\t", 
      "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ef2afe2b-8c99-4714-8978-2765442c2d53"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getCoeffPhaseCorrection\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"26d5c8cd-ba3e-4e39-9a96-24287deee014"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]prepCoeffRephasing\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e6e65a69-5feb-40fd-8487-4e9108fb5c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"prepCoeffRephasing", "[", 
    RowBox[{"dvrWavefunctions_", ",", " ", "states_"}], "]"}], "[", 
   RowBox[{"blerp_", ",", " ", "params_"}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Module", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "nstates", ",", " ", "fleng", ",", " ", "pickSpec", ",", " ", "pickComp",
       ",", "\n", "      ", "gg", ",", " ", "blerpDVR", ",", " ", "\n", 
      "      ", "baseWfnsSCF", ",", " ", "baseWfnsDVR", ",", " ", "\n", 
      "      ", "coeffs", ",", " ", "coeffLists", ",", " ", "grid"}], "\n", 
     "      ", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"pickSpec", " ", "=", " ", 
      RowBox[{"params", "[", "\"\<GridPositions\>\"", "]"}]}], ";", "\n", 
     "    ", 
     RowBox[{"blerpDVR", "=", 
      RowBox[{"dvrWavefunctions", "[", 
       RowBox[{"[", "pickSpec", "]"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"baseWfnsSCF", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "m", "}"}], "]"}], "]"}], "&"}], ",", " ", 
           "blerp"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"m", ",", " ", "states"}], "}"}]}], "]"}]}], ";", "\n", 
     "    ", 
     RowBox[{"baseWfnsDVR", "=", 
      RowBox[{"Join", "@@", "blerpDVR"}]}], ";", "\n", "    ", 
     RowBox[{"{", 
      RowBox[{"baseWfnsSCF", ",", " ", "baseWfnsDVR"}], "}"}]}]}], "\n", 
   "    ", "]"}]}]], \
"CodeInput",ExpressionUUID->"233c99ea-f293-4546-b10b-25f16c2fd7d4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]computePairwiseOverlaps\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0c3a652a-8d1d-46b0-a421-4db34fa5d80a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePairwiseOverlaps", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"baseWfnsSCF_", ",", " ", "dvrWfs_"}], "}"}], ",", " ", 
    "params___"}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "coeffs", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"coeffs", "=", "\n", "      ", 
      RowBox[{"Transpose", "@", "\n", "        ", 
       RowBox[{"Table", "[", "\n", "  ", "  ", "      ", 
        RowBox[{
         RowBox[{"Developer`ToPackedArray", "[", 
          RowBox[{"Diagonal", "[", 
           RowBox[{"dvrWfs", "@", 
            RowBox[{"\"\<Overlaps\>\"", "[", "scfWfs", "]"}]}], "]"}], "]"}], 
         ",", "\n", "  ", "  ", "      ", 
         RowBox[{"{", 
          RowBox[{"scfWfs", ",", " ", "baseWfnsSCF"}], "}"}]}], "\n", 
        "          ", "]"}]}]}], ";", "\n", "    ", 
     RowBox[{"coeffs", ".", 
      RowBox[{"Transpose", "[", "coeffs", "]"}]}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"97dfc15f-a6e8-40c0-9ab2-1e497c885ef9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getCoeffPhaseCorrection\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"34b768de-00bc-4ee3-b0af-66e651eed6ed"],

Cell[BoxData[{
 RowBox[{"getCoeffPhaseCorrection", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"getCoeffPhaseCorrection", "[", "\n", "\t", 
   RowBox[{
   "scfWavefunctions_", ",", " ", "dvrWavefunctions_", ",", " ", "\n", "\t", 
    "grid_", ",", "\n", "\t", 
    RowBox[{"states", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_Integer", "?", "IntegerQ"}], ",", " ", 
       RowBox[{"__Integer", "?", "IntegerQ"}]}], "}"}]}], ",", "\n", "\t", 
    RowBox[{"basePhases", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}], "|", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "|", 
          RowBox[{"-", "1"}]}], ")"}], ".."}], "}"}]}], ":", "1"}], ",", "\n",
     "\t", 
    RowBox[{"rephase", ":", 
     RowBox[{"True", "|", "False"}], ":", "True"}], ",", "\n", "\t", 
    RowBox[{"tol", ":", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"IntegerQ", "[", "#", "]"}]}], "||", 
           RowBox[{"#", "\[Equal]", "0"}]}], ")"}]}], "&"}], ")"}]}], ":", 
     "0."}]}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t  ", 
   RowBox[{
    RowBox[{"{", "\n", "\t    ", 
     RowBox[{
     "dvrs", ",", " ", "scfs", ",", "\n", "\t    ", "rephasing", ",", " ", 
      "newWfns"}], "\n", "\t    ", "}"}], ",", "\n", "\t  ", 
    RowBox[{
     RowBox[{"scfs", " ", "=", " ", "scfWavefunctions"}], ";", "\n", "\t  ", 
     RowBox[{"dvrs", " ", "=", " ", "\n", "\t    ", 
      RowBox[{"Table", "[", "\n", "\t      ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "state", "}"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
          "dvrWavefunctions"}], ",", "\n", "\t      ", 
        RowBox[{"{", 
         RowBox[{"state", ",", " ", "states"}], "}"}]}], "\n", "\t      ", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"rephasing", "=", "\n", "\t\t  ", 
      RowBox[{"MapThread", "[", "\n", "\t\t    ", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u2", "=", 
             RowBox[{"Unique", "[", "phaseCorrectionVector", "]"}]}], "}"}], 
           ",", "\n", "  \t      ", 
           RowBox[{
            RowBox[{"u2", " ", "=", " ", 
             RowBox[{
             "generalizedPhaseCorrection", "[", "\n", "        \t\t", 
              RowBox[{
               RowBox[{"{", "\n", "  ", "      \t\t  ", 
                RowBox[{"scfs", ",", " ", "\n", "  ", "      \t\t  ", 
                 RowBox[{
                  RowBox[{"#", "=!=", "$Failed"}], "&"}], ",", " ", "\n", 
                 "  ", "      \t\t  ", 
                 RowBox[{"prepCoeffRephasing", "[", 
                  RowBox[{"#", ",", " ", "states"}], "]"}], ",", " ", "\n", 
                 "  ", "      \t\t  ", 
                 RowBox[{
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"u", "=", 
                    RowBox[{"Unique", "[", "pairwiseOverlaps", "]"}]}], "}"}],
                     ",", "\n", "  ", "      \t\t    ", 
                    RowBox[{
                    RowBox[{"u", " ", "=", " ", 
                    RowBox[{"computePairwiseOverlaps", "[", "##", "]"}]}], 
                    ";", "\n", "  ", "      \t\t    ", 
                    RowBox[{"dumpSymbol", "[", "u", "]"}], ";", "\n", "  ", 
                    "      \t\t    ", "u"}]}], "\n", "  ", "      \t\t    ", 
                   "]"}], "&"}]}], "\n", "  ", "      \t\t  ", "}"}], ",", 
               "\n", "  ", "    \t\t  ", "grid", ",", "\n", "  ", 
               "    \t\t  ", "#2", ",", "\n", "      \t\t  ", "tol"}], "\n", 
              "      \t\t  ", "]"}]}], ";", "\n", "      \t\t", 
            RowBox[{"dumpSymbol", "[", "u2", "]"}], ";", "\n", "      \t\t", 
            "u2"}]}], "\n", "    \t\t  ", "]"}], "&"}], ",", "\n", "  \t\t  ", 
        RowBox[{"{", "\n", "    \t\t  ", 
         RowBox[{"dvrs", ",", "\n", "    \t\t  ", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"basePhases", ",", " ", 
              RowBox[{"Length", "@", "dvrs"}]}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"Length", "@", "dvrs"}]}], "]"}], "]"}]}], "\n", 
         "    \t\t  ", "}"}]}], "\n", "  ", "  \t\t", "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"rephase", ",", "\n", "\t\t\t", 
       RowBox[{"newWfns", "=", "\n", "\t\t\t\t", 
        RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
             RowBox[{"Join", "[", "##", "]"}]}], "]"}], "&"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
                  RowBox[{"rephaseWfns", "[", 
                   RowBox[{"#", ",", " ", "#2"}], "]"}]}], "]"}], "&"}], ",", 
               "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", "\"\<PhaseVector\>\"", "]"}], ",", " ", 
                 "#2"}], "}"}]}], "\n", "\t\t\t\t\t\t\t", "]"}], "&"}], ",", 
            "\n", "\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"rephasing", ",", " ", "dvrs"}], "}"}]}], "\n", 
           "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"newWfns", "=", "None"}]}], "\n", "\t\t\t", "]"}], ";", "\n", 
     "\t\t", 
     RowBox[{"<|", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Wavefunctions\>\"", "->", "newWfns"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<Rephasings\>\"", "->", "rephasing"}]}], "\n", "\t\t\t", 
      "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"b3d35c02-2783-44f9-8c50-f2d200fb67aa"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getCoeffForcedPhaseCorrection\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3706efde-9564-4e06-a63a-0a5432fea9f8"],

Cell["\[LeftCeiling]An idea worth pursuing eventually, but not just yet...\
\[RightFloor]", "Text",
 Evaluatable->True,ExpressionUUID->"bad82be4-9d10-4be2-9bde-a91a4bf70eb5"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"getCoeffPhaseCorrection", "//", "Clear"}], "\n", 
    RowBox[{"getCoeffPhaseCorrection", "[", "\n", "\t", 
     RowBox[{
     "scfWavefunctions_", ",", " ", "dvrWavefunctions_", ",", " ", "\n", "\t",
       "grid_", ",", "\n", "\t", 
      RowBox[{"states", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_Integer", "?", "IntegerQ"}], ",", " ", 
         RowBox[{"__Integer", "?", "IntegerQ"}]}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"knownPhases", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "|", 
             RowBox[{"-", "1"}]}], ")"}], ",", " ", 
           RowBox[{"(", 
            RowBox[{"1", "|", 
             RowBox[{"-", "1"}]}], ")"}]}], "}"}], ".."}], "}"}]}], ",", "\n",
       "\t", 
      RowBox[{"rephase", ":", 
       RowBox[{"True", "|", "False"}], ":", "True"}], ",", "\n", "\t", 
      RowBox[{"tol", ":", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"IntegerQ", "[", "#", "]"}]}], "||", 
             RowBox[{"#", "\[Equal]", "0"}]}], ")"}]}], "&"}], ")"}]}], ":", 
       "0."}]}], "\n", "\t", "]"}]}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t  ", 
    RowBox[{
     RowBox[{"{", "\n", "\t    ", 
      RowBox[{
      "dvrs", ",", " ", "scfs", ",", "\n", "\t    ", "rephasing", ",", " ", 
       "newWfns"}], "\n", "\t    ", "}"}], ",", "\n", "\t  ", 
     RowBox[{
      RowBox[{"scfs", " ", "=", " ", "scfWavefunctions"}], ";", "\n", "\t  ", 
      
      RowBox[{"dvrs", " ", "=", " ", "\n", "\t    ", 
       RowBox[{"Table", "[", "\n", "\t      ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "state", "}"}], "]"}], "]"}]}], "]"}], "&"}], "/@",
           "dvrWavefunctions"}], ",", "\n", "\t      ", 
         RowBox[{"{", 
          RowBox[{"state", ",", " ", "states"}], "}"}]}], "\n", "\t      ", 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"rephasing", "=", "\n", "\t\t  ", 
       RowBox[{"Map", "[", "\n", "\t\t    ", 
        RowBox[{
         RowBox[{
          RowBox[{"generalizedPhaseCorrection", "[", "\n", "         ", 
           RowBox[{
            RowBox[{"{", "\n", "      \t\t  ", 
             RowBox[{"scfs", ",", " ", "\n", "      \t\t  ", 
              RowBox[{
               RowBox[{"#", "=!=", "$Failed"}], "&"}], ",", " ", "\n", 
              "      \t\t  ", 
              RowBox[{"prepCoeffRephasing", "[", 
               RowBox[{"#", ",", " ", "states"}], "]"}]}], "\n", 
             "      \t\t  ", "}"}], ",", "\n", "    \t\t  ", "grid", ",", 
            "\n", "    \t\t  ", "#2", ",", "\n", "    \t\t  ", "tol"}], "\n", 
           "    \t\t  ", "]"}], "&"}], ",", "\n", "  \t\t  ", 
         RowBox[{"{", "\n", "    \t\t  ", "dvrs", "\n", "    \t\t  ", "}"}]}],
         "\n", "    \t\t", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"rephase", ",", "\n", "\t\t\t", 
        RowBox[{"newWfns", "=", "\n", "\t\t\t\t", 
         RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
              RowBox[{"Join", "[", "##", "]"}]}], "]"}], "&"}], ",", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", "===", "$Failed"}], ",", " ", "#", ",", " ", 
                   RowBox[{"rephaseWfns", "[", 
                    RowBox[{"#", ",", " ", "#2"}], "]"}]}], "]"}], "&"}], ",",
                 "\n", "\t\t\t\t\t\t\t", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", "\"\<PhaseVector\>\"", "]"}], ",", " ", 
                  "#2"}], "}"}]}], "\n", "\t\t\t\t\t\t\t", "]"}], "&"}], ",", 
             "\n", "\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"rephasing", ",", " ", "dvrs"}], "}"}]}], "\n", 
            "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"newWfns", "=", "None"}]}], "\n", "\t\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"<|", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"\"\<Wavefunctions\>\"", "->", "newWfns"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"\"\<Rephasings\>\"", "->", "rephasing"}]}], "\n", "\t\t\t", 
       "|>"}]}]}], "\n", "\t\t", "]"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"d0a57cfc-3c08-4836-a2ab-ac1df9e5de52"]\

}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]correctRowFlips\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d341d736-1dc4-4987-9c2e-2258b1eeeeb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rowsFlipped", "[", 
    RowBox[{"{", 
     RowBox[{"row1_", ",", " ", "row2_"}], "}"}], "]"}], ":=", "\n", "  ", 
   RowBox[{"Module", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"{", "\n", "    \t", "\n", "      ", 
      RowBox[{
      "r1", ",", " ", "r2", ",", "\n", "      ", "r12Len", ",", "\n", 
       "      ", "flipCounts", ",", "\n", "      ", "mr1", ",", " ", "mr2", 
       ",", " ", "mr12"}], "\n", "      ", "}"}], ",", "\n", "    ", 
     RowBox[{
      RowBox[{"r1", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"row1", ",", " ", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"r2", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"row2", ",", " ", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"r12Len", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"Length", "/@", 
         RowBox[{"{", 
          RowBox[{"r1", ",", " ", "r2"}], "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"mr1", " ", "=", " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"Length", "[", "r1", "]"}], "/", "2"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"mr2", " ", "=", " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{
         RowBox[{"Length", "[", "r2", "]"}], "/", "2"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"mr12", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{"r12Len", "/", "2"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"r1", " ", "=", " ", 
       RowBox[{"Sign", " ", "@", " ", 
        RowBox[{"r1", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", "mr1", "-", "mr12"}], ";;", 
           RowBox[{"mr1", "+", "mr12"}]}], "]"}], "]"}]}]}], ";", "\n", 
      "    ", 
      RowBox[{"r2", " ", "=", " ", 
       RowBox[{"Sign", " ", "@", " ", 
        RowBox[{"r2", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", "mr2", "-", "mr12"}], ";;", 
           RowBox[{"mr2", "+", "mr12"}]}], "]"}], "]"}]}]}], ";", "\n", 
      "    ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{
           RowBox[{"r1", "*", "r2"}], ",", " ", 
           RowBox[{"-", "1"}]}], "]"}], ">", 
         RowBox[{"mr12", "/", "4"}]}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "]"}]}]}], "\n", "    ", "]"}]}],
   ";"}]], "CodeInput",ExpressionUUID->"e1b03571-85bc-4626-85f9-8921505a15ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctRowFlips", "[", 
   RowBox[{"gridVals_", ",", " ", 
    RowBox[{"direction", ":", 
     RowBox[{"First", "|", "Last"}], ":", "Last"}], ",", " ", 
    RowBox[{"basePhase", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}]}], ":", "1"}]}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Module", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{"regridded", ",", " ", "grouped", ",", " ", "\n", "  ", "    ", 
      RowBox[{"gind1", " ", "=", " ", 
       RowBox[{"Replace", "[", 
        RowBox[{"direction", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "\[Rule]", "1"}], ",", " ", 
           RowBox[{"Last", "\[Rule]", "2"}]}], "}"}]}], "]"}]}], ",", "\n", 
      "      ", 
      RowBox[{"gind2", " ", "=", " ", 
       RowBox[{"Replace", "[", 
        RowBox[{"direction", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "\[Rule]", "2"}], ",", " ", 
           RowBox[{"Last", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], ",", "\n", 
      "      ", "flippedVec", ",", "\n", "      ", "rows", ",", "\n", 
      "      ", "rephased", ",", "\n", "      ", "recoorded", ",", "\n", 
      "      ", "gpsOrig"}], "\n", "      ", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"regridded", " ", "=", " ", "\n", "      ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gridVals", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", 
            RowBox[{";;", "2"}]}], "]"}], "]"}], ".", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", " ", 
        RowBox[{"gridVals", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", 
           RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", " ", "2"}], "]"}]}], 
     ";", "\n", "    ", 
     RowBox[{"grouped", " ", "=", " ", "\n", "      ", 
      RowBox[{"KeySort", "@", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"regridded", ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "gind1", "]"}], "]"}], ",", " ", ".01"}], "]"}], 
            "&"}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"gind1", ",", " ", "gind2", ",", " ", "3"}], "}"}], 
              "]"}], "]"}], "&"}], ")"}]}], ",", " ", "Sort"}], "]"}]}]}], 
     ";", "\n", "    ", 
     RowBox[{"rows", " ", "=", " ", 
      RowBox[{
       RowBox[{"Values", "[", "grouped", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "All", ",", " ", "3"}], "]"}], "]"}]}], ";", 
     "\n", "    ", "grouped", ";", "\n", "    ", 
     RowBox[{"flippedVec", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"rowsFlipped", "[", 
         RowBox[{"rows", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"i", "+", "1"}]}], "}"}], "]"}], "]"}], "]"}], ",", " ", 
        
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{
           RowBox[{"Length", "[", "rows", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}]}], ";", "\n", "    ", 
     RowBox[{"rephased", "=", "\n", "      ", 
      RowBox[{
       RowBox[{"rephaseThingies", "[", 
        RowBox[{"flippedVec", ",", " ", "basePhase", ",", " ", "0"}], "]"}], 
       "*", "rows"}]}], ";", "\n", "    ", 
     RowBox[{"gpsOrig", "=", "\n", "      ", 
      RowBox[{"MapThread", "[", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "\n", "          ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", " ", "#2"}], "}"}], "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"gind1", ",", " ", "gind2"}], "}"}], "]"}], "]"}], "\n",
            "          ", "]"}], ".", 
          RowBox[{"RotationMatrix", "[", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "4"}], "]"}]}], "&"}], ",", "\n", 
        "        ", 
        RowBox[{"{", "\n", "          ", 
         RowBox[{
          RowBox[{
           RowBox[{"Values", "[", "grouped", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}], 
          ",", "\n", "          ", 
          RowBox[{
           RowBox[{"Values", "[", "grouped", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "All", ",", " ", "2"}], "]"}], "]"}]}], 
         "\n", "          ", "}"}]}], "\n", "        ", "]"}]}], ";", "\n", 
     "       ", "\n", "    ", 
     RowBox[{"recoorded", "=", "\n", "      ", 
      RowBox[{"Join", "@@", "\n", "        ", 
       RowBox[{"MapThread", "[", "\n", "          ", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"List", "/@", "#2"}], ",", " ", "2"}], "]"}], "&"}], ",", 
         "\n", "  ", "        ", 
         RowBox[{"{", "\n", "  ", "          ", 
          RowBox[{"gpsOrig", ",", "\n", "  ", "          ", "rephased"}], 
          "\n", "  ", "          ", "}"}]}], "\n", "          ", "]"}]}]}], 
     ";", "\n", "   ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"dumpSymbol", "[", "recoorded", "]"}], ";"}], "*)"}], "\n", 
     "    ", 
     RowBox[{"Sort", "[", "recoorded", "]"}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"7dcdeb10-3458-4e2b-9ade-00589eb103d5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getVectorPhaseCorrection\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c01f74d8-f084-47d2-be2b-0ce0e5bd4158"],

Cell[BoxData[{
 RowBox[{"getVectorPhaseCorrection", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"getVectorPhaseCorrection", "[", 
   RowBox[{"values_List", ",", " ", "\n", "\t", "grid_", ",", " ", "\n", "\t", 
    RowBox[{"basePhase", ":", 
     RowBox[{"1", "|", 
      RowBox[{"-", "1"}]}], ":", "1"}], ",", "\n", "\t", 
    RowBox[{"rephase", ":", 
     RowBox[{"True", "|", "False"}], ":", "True"}], ",", "\n", "\t", 
    RowBox[{"tol", ":", "_Real", ":", ".001"}]}], "\n", "\t", "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"pos", ",", "\n", "\t\t\t", 
      RowBox[{"gridPoints", "=", 
       RowBox[{"grid", "[", "\"\<Points\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      "cleanGrid", ",", "\n", "\t\t\t", "cleanGridSorted", ",", "\n", 
      "\t\t\t", "gridReordering", ",", "\n", "\t\t\t", "gridPositions", ",", 
      "\n", "\t\t\t", "ratios", ",", "\n", "\t\t\t", "reorderedVals", ",", 
      "\n", "\t\t\t", "phases", ",", "\n", "\t\t\t", "orderComplement", ",", 
      "\n", "\t\t\t", "phaseVector", ",", "\n", "\t\t\t", "newValues"}], "\n",
      "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"pos", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Position", "[", 
        RowBox[{"values", ",", " ", 
         RowBox[{"_", "?", "NumericQ"}], ",", " ", 
         RowBox[{"{", "1", "}"}]}], "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"cleanGrid", "=", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"grid", "[", 
          RowBox[{"[", "pos", "]"}], "]"}], ".", 
         RowBox[{"RotationMatrix", "[", 
          RowBox[{"\[Pi]", "/", "4"}], "]"}]}], ",", " ", ".001"}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"cleanGridSorted", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"EvenQ", "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "Reverse", ",",
             " ", "Identity"}], "]"}], "@", "#"}], "&"}], "]"}], "@", "\n", 
       "\t\t\t\t", 
       RowBox[{"SortBy", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{"#", ",", " ", "First"}], "]"}], "&"}], "/@", 
          RowBox[{"GatherBy", "[", 
           RowBox[{"cleanGrid", ",", " ", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ",", 
         " ", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}]}], "\n", 
        "\t\t\t\t\t", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"gridReordering", "=", "\n", "\t\t\t", 
      RowBox[{"Flatten", "@", "\n", "\t\t\t\t", 
       RowBox[{"Lookup", "[", 
        RowBox[{
         RowBox[{"PositionIndex", "[", "cleanGrid", "]"}], ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"cleanGridSorted", ",", " ", "1"}], "]"}]}], "\n", 
        "\t\t\t\t\t", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"gridPositions", "=", 
      RowBox[{"pos", "[", 
       RowBox[{"[", "gridReordering", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"reorderedVals", "=", 
      RowBox[{"values", "[", 
       RowBox[{"[", "gridPositions", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"ratios", "=", 
      RowBox[{"MovingMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], ",", " ", 
           RowBox[{"Divide", "@@", "#"}], ",", " ", "0."}], "]"}], "&"}], ",",
         " ", "reorderedVals", 
        RowBox[{"(*", 
         RowBox[{"Differences", "[", "reorderedVals", "]"}], "*)"}], ",", " ",
         "1"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"ratios", ",", " ", 
         RowBox[{"ratios", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ";"}], " ", "*)"}], 
     "\n", "\t\t", 
     RowBox[{"phases", "=", 
      RowBox[{"rephaseThingies", "[", 
       RowBox[{"ratios", ",", " ", "basePhase", ",", " ", "tol"}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"orderComplement", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "values"}], "]"}], ",", " ", 
        "gridPositions"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"phaseVector", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"phases", ",", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"$Failed", ",", " ", 
           RowBox[{"Length", "@", "orderComplement"}]}], "]"}]}], "]"}], "[", 
       
       RowBox[{"[", "\n", "\t\t\t\t", 
        RowBox[{"Ordering", "@", 
         RowBox[{"Join", "[", 
          RowBox[{"gridPositions", ",", " ", "orderComplement"}], "]"}]}], 
        "\n", "\t\t\t\t", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"rephase", ",", "\n", "\t\t\t", 
       RowBox[{"newValues", "=", "\n", "\t\t\t\t", 
        RowBox[{"values", "*", 
         RowBox[{"Replace", "[", 
          RowBox[{"phaseVector", ",", " ", 
           RowBox[{"$Failed", "\[Rule]", "1"}], ",", " ", "1"}], "]"}]}]}], 
       ",", "\n", "\t\t\t", 
       RowBox[{"newValues", "=", "None"}]}], "\n", "\t\t\t", "]"}], ";", "\n",
      "\t\t", 
     RowBox[{"<|", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Values\>\"", "->", "newValues"}], ",", "\n", "\t\t\t", 
       RowBox[{"\"\<PhaseVector\>\"", "\[Rule]", "phaseVector"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<Positions\>\"", "\[Rule]", "pos"}], ",", "\n", "\t\t\t", 
       RowBox[{"\"\<Ordering\>\"", "->", "gridPositions"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<Phases\>\"", "\[Rule]", "phases"}]}], "\n", "\t\t\t", 
      "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"908bfb58-c694-4780-ad76-4ad4b2b8c5c7"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SCF\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"3506acec-dff1-4efa-9f4f-dfeef676e240"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]scfGrid\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"37c16e15-7763-4841-b761-7dd685139861"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"scfGrid", "[", 
    RowBox[{"scfDvr_", ",", " ", "basisSize_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"scfGrid", "[", 
     RowBox[{"scfDvr", ",", " ", "basisSize"}], "]"}], "=", "\n", "\t\t", 
    RowBox[{"scfDvr", "[", 
     RowBox[{"\"\<Grid\>\"", ",", "\n", "\t", "\t\t", 
      RowBox[{"\"\<Points\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"basisSize", ",", " ", "basisSize"}], "}"}]}], ",", "\n", 
      "\t", "\t\t", 
      RowBox[{"\"\<PotentialOptimize\>\"", "\[Rule]", "False"}]}], "\n", "\t",
      "\t\t", "]"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"434c8d07-b4e6-4d8f-8e44-1e7294da3903"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]scfWavefunction\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a3df54ac-d721-4d22-a232-a58fd85386bf"],

Cell[BoxData[{
 RowBox[{"scfWavefunction", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scfWavefunction", "[", "\n", "\t", 
    RowBox[{
    "scf1DDVR_", ",", "\n", "\t", "scfGrid_", ",", "\n", "\t", 
     "pot_CompiledFunction", ",", "\n", "\t", 
     RowBox[{"states", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}], 
     ",", "\n", "\t", 
     RowBox[{"n", ":", 
      RowBox[{"_Integer", "|", "Automatic"}], ":", "Automatic"}]}], "\n", 
    "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"WavefunctionsObject", "[", "\n", "\t\t", 
    RowBox[{"\"\<SCF\>\"", ",", "\n", "\t\t", "scf1DDVR", ",", "\n", "\t\t", 
     RowBox[{"GridFunctionObject", "[", "\n", "\t\t\t", 
      RowBox[{"scfGrid", ",", "\n", "\t\t\t", 
       RowBox[{"pot", "@", 
        RowBox[{"scfGrid", "[", "\"\<Points\>\"", "]"}]}]}], "\n", "\t\t\t", 
      "]"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<StateVectors\>\"", "\[Rule]", "states"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "n"}]}], "\n", "\t\t", 
    "]"}]}], ";"}]}], \
"CodeInput",ExpressionUUID->"f010c0c4-eeb4-4f1e-96f0-cd7f28f3ea1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"scfWavefunction", "[", "\n", "\t", 
    RowBox[{
    "scf1DDVR_", ",", "\n", "\t", "scfGrid_", ",", "\n", "\t", 
     "potentialGenerator_", ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"a_", ",", " ", "s_"}], "}"}], ",", "\n", "\t", 
     RowBox[{"states", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_Integer", ",", " ", "_Integer"}], "}"}], ".."}], "}"}]}], 
     ",", "\n", "\t", 
     RowBox[{"n", ":", 
      RowBox[{"_Integer", "|", "Automatic"}], ":", "Automatic"}]}], "\n", 
    "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pot", "=", 
       RowBox[{"potentialGenerator", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", " ", "s"}], "}"}], "]"}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pot", "===", "$Failed"}], ",", "\n", "\t\t\t", "$Failed", ",",
        "\n", "\t\t\t", 
       RowBox[{"scfWavefunction", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "scf1DDVR", ",", "\n", "\t\t\t\t", "scfGrid", ",", "\n", "\t\t\t\t", 
         "pot", ",", "\n", "\t\t\t\t", "states", ",", "\n", "\t\t\t\t", "n"}],
         "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
    "]"}]}], ";"}]], \
"CodeInput",ExpressionUUID->"29f1314e-0f78-40a2-8392-4fabca41589a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]scfCoeffData\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c3685398-cf54-4a3d-8f98-9065b99d3835"],

Cell[BoxData[{
 RowBox[{"scfCoeffData", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"scfCoeffData", "[", "\n", "\t", 
   RowBox[{
   "scf1DDVR_", ",", "\n", "\t", "scf2DDVR_", ",", "\n", "\t", "scfGrid_", 
    ",", "\n", "\t", "potentialGenerator_", ",", "\n", "\t", "states_", ",", 
    "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", "s_"}], "}"}], ",", "\n", "\t", "basisSize_"}], 
   "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"pot", "=", 
       RowBox[{"potentialGenerator", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", " ", "s"}], "}"}], "]"}]}], ",", "\n", "\t\t\t", 
      "wfs", ",", "\n", "\t\t\t", "wfs2D", ",", "\n", "\t\t\t", "coeffs", ",",
       "\n", "\t\t\t", "expand"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"pot", "===", "$Failed"}], ",", "\n", "\t\t\t", "$Failed", ",", 
      "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"wfs", "=", "\n", "\t\t\t\t", 
        RowBox[{"scfWavefunction", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
         "scf1DDVR", ",", "\n", "\t\t\t\t\t", "scfGrid", ",", "\n", 
          "\t\t\t\t\t", "pot", ",", "\n", "\t\t\t\t\t", "states"}], "\n", 
         "\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
       RowBox[{"wfs2D", "=", "\n", "\t\t\t\t", 
        RowBox[{"scf2DDVR", "[", "\n", "\t\t\t\t\t", 
         RowBox[{"\"\<Wavefunctions\>\"", ",", "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<Points\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"basisSize", ",", " ", "basisSize"}], "}"}]}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"\"\<PotentialOptimize\>\"", "\[Rule]", "False"}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<PotentialFunction\>\"", "\[Rule]", "pot"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", 
           RowBox[{"Length", "@", "states"}]}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<PreadjustHamiltonian\>\"", "\[Rule]", "False"}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"\"\<ValidateHamiltonian\>\"", "\[Rule]", "False"}]}], "\n",
          "\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
       RowBox[{"<|", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"\"\<SCFWavefunctions\>\"", "->", "wfs"}], ",", " ", "\n", 
         "\t\t\t\t", 
         RowBox[{"\"\<DVRWavefunctions\>\"", "->", "wfs2D"}]}], "\n", 
        "\t\t\t\t", "|>"}]}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"115aa4c4-9dd3-4d0b-a874-892f0515664f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Overlaps\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"51efa70e-5593-4484-93ef-6768376b1614"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]smoothOutCoeffs\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e79b32bd-a6ce-4a9c-ba52-94539116362d"],

Cell[BoxData[{
 RowBox[{"smoothOutCoeffs", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"smoothOutCoeffs", "[", 
   RowBox[{"coeffGrid_", ",", " ", 
    RowBox[{"dir", ":", 
     RowBox[{"First", "|", "Last"}]}], ",", " ", 
    RowBox[{"cutoff", ":", 
     RowBox[{"_", "?", "NumericQ"}], ":", "0"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t  ", 
   RowBox[{
    RowBox[{"{", "\n", "\t    ", 
     RowBox[{
     "aSlices", ",", "\n", "\t    ", "g", ",", "\n", "\t    ", "df", ",", 
      "\n", "\t    ", "twoDs", ",", "\n", "\t    ", "signFlips", ",", "\n", 
      "\t    ", "rephasable", ",", "\n", "\t    ", "rephaseVector", ",", "\n",
       "\t    ", "startPhase", ",", "\n", "\t    ", "rephased", ",", "\n", 
      "\t    ", 
      RowBox[{"gind1", " ", "=", " ", 
       RowBox[{"Replace", "[", 
        RowBox[{"dir", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "\[Rule]", "1"}], ",", " ", 
           RowBox[{"Last", "\[Rule]", "2"}]}], "}"}]}], "]"}]}], ",", "\n", 
      "\t    ", 
      RowBox[{"gind2", " ", "=", " ", 
       RowBox[{"Replace", "[", 
        RowBox[{"dir", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"First", "\[Rule]", "2"}], ",", " ", 
           RowBox[{"Last", "\[Rule]", "1"}]}], "}"}]}], "]"}]}]}], "\n", 
     "\t    ", "}"}], ",", "\n", "\t  ", 
    RowBox[{
     RowBox[{"aSlices", " ", "=", " ", 
      RowBox[{"KeySort", "@", 
       RowBox[{"GroupBy", "[", 
        RowBox[{"coeffGrid", ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "gind1", "]"}], "]"}], "&"}], ")"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"gind2", ",", " ", "3"}], "}"}], "]"}], "]"}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\n", "\t  ", 
     RowBox[{"startPhase", " ", "=", " ", "\n", "\t    ", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"l", "=", 
          RowBox[{"KeySort", "@", 
           RowBox[{"GroupBy", "[", 
            RowBox[{"coeffGrid", ",", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "&"}], ")"}], "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "&"}], ")"}]}]}], "]"}]}]}], 
         "}"}], ",", "\n", "\t      ", 
        RowBox[{"Sign", "@", 
         RowBox[{"Mean", "@", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"Length", "[", "l", "]"}], "/", "2"}], "]"}], "]"}], 
           "]"}]}]}]}], "\n", "\t      ", "]"}]}], ";", "\n", "\t  ", 
     RowBox[{"twoDs", " ", "=", " ", "\n", "\t    ", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gg", "=", 
            RowBox[{"SortBy", "[", 
             RowBox[{"#", ",", " ", "First"}], "]"}]}], "}"}], ",", "\n", 
          "  \t    ", 
          RowBox[{"(*", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", "\n", "  \t      ", 
             RowBox[{
              RowBox[{"gg", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ","}]}]}], 
           "*)"}], "\n", "  \t      ", 
          RowBox[{
          "NDSolve`FiniteDifferenceDerivative", "[", "\n", "           ", 
           RowBox[{
            RowBox[{"Derivative", "[", "2", "]"}], ",", " ", "\n", 
            "           ", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"Transpose", "[", "gg", "]"}]}]}], "\n", "            ", 
           "]"}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"\n", "          ", "}"}], "]"}], "*)"}], "\n", "       ", 
         "]"}], "&"}], "/@", "aSlices"}]}], ";", "\n", "    ", 
     RowBox[{"signFlips", " ", "=", " ", "\n", "      ", 
      RowBox[{
       RowBox[{
        RowBox[{"MovingMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Times", "@@", 
            RowBox[{"Sign", "[", "#", "]"}]}], "&"}], ",", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", "1"}], 
         "]"}], "&"}], "/@", "aSlices"}]}], ";", "\n", "    ", 
     RowBox[{"rephasable", "=", "\n", "      ", 
      RowBox[{"MapThread", "[", "\n", "        ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "1", " ", "at", " ", "the", " ", "already", " ", "fine", " ", 
          "places", " ", "and"}], " ", "-", 
         RowBox[{"1", " ", "where", " ", "not"}]}], " ", "*)"}], "\n", 
       "        ", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"-", "2"}], "*", 
           RowBox[{"UnitStep", "[", 
            RowBox[{"-", "#"}], "]"}], "*", 
           RowBox[{"UnitStep", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"Most", "[", "#2", "]"}], "]"}], "-", "cutoff"}], ",", 
             " ", "1"}], "]"}]}]}], "&"}], ",", "\n", "        ", 
        RowBox[{"{", "\n", "          ", 
         RowBox[{"signFlips", ",", "\n", "          ", "twoDs"}], "\n", 
         "          ", "}"}]}], "\n", "        ", "]"}]}], ";", "\n", "     ", 
     RowBox[{"rephased", "=", "\n", "       ", 
      RowBox[{"MapThread", "[", "\n", "         ", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"shiftInside", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "/", "4"}], "]"}]}], "}"}], 
           ",", "\n", "  ", "         ", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", "\n", "  ", "           ", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", "\n", "  ",
               "           ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"RotateLeft", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "#", "]"}], ",", " ", 
                    "shiftInside"}], "]"}], ",", " ", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "[", "\n",
                 "  ", "             ", 
                RowBox[{"rephaseThingies", "[", "\n", "  ", "               ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{
                   "to", " ", "get", " ", "away", " ", "from", " ", "the", 
                    " ", "broken", " ", "edges"}], "..."}], " ", "*)"}], "\n",
                  "  ", "  ", "             ", 
                 RowBox[{
                  RowBox[{"RotateRight", "[", 
                   RowBox[{"#2", ",", " ", "shiftInside"}], "]"}], ",", "\n", 
                  "  ", "               ", 
                  RowBox[{"(*", " ", 
                   RowBox[{"get", " ", "the", " ", "base", " ", "phase"}], 
                   " ", "*)"}], " ", "\n", "  ", "  ", "             ", 
                  RowBox[{"Replace", "[", "\n", "  ", "  ", "               ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Sign", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"shiftInside", ",", " ", "2"}], "]"}], "]"}], 
                    "]"}], ",", " ", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "]"}], "*", "\n", "  ", 
                    "  ", "                 ", 
                    RowBox[{"Replace", "[", 
                    RowBox[{"startPhase", ",", " ", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "]"}]}], ",", " ", "\n", 
                    "  ", "  ", "               ", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "\n", "  ", "  ", 
                   "               ", "]"}], ",", " ", "\n", "  ", 
                  "               ", "0"}], "]"}], "\n", "  ", 
                "              ", "]"}], "*", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], "\n", "  ",
              "           ", "}"}], "]"}]}], "\n", "           ", "]"}], 
         "&"}], ",", "\n", "         ", 
        RowBox[{"{", "\n", "           ", 
         RowBox[{"aSlices", " ", ",", "\n", "           ", "rephasable"}], 
         "\n", "           ", "}"}]}], "\n", "         ", "]"}]}], ";", "\n", 
     "    ", 
     RowBox[{"Join", "@@", "\n", "      ", 
      RowBox[{"KeyValueMap", "[", "\n", "        ", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "\n", "          ", 
          RowBox[{
           RowBox[{"{", "\n", "            ", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"#", ",", " ", 
               RowBox[{"Length", "@", "#2"}]}], "]"}], ",", " ", "\n", 
             "            ", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "\n", 
             "            ", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "\n", 
            "            ", "}"}], "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"gind1", ",", " ", "gind2", ",", " ", "3"}], "}"}], 
            "]"}], "]"}], "\n", "          ", "]"}], "&"}], ",", "\n", 
        "        ", "rephased"}], "\n", "        ", "]"}]}]}]}], "\n", 
   "\t    ", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"b07c318f-91a8-45e0-a42d-d5386c3efba8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"needsSmoothingTest", "[", 
   RowBox[{"coeffGrid_", ",", " ", "dir_"}], "]"}], ":=", "\n", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gridChunks", ",", " ", "signFlips"}], "}"}], ",", "\n", "    ", 
    
    RowBox[{
     RowBox[{"gridChunks", " ", "=", " ", 
      RowBox[{"GroupBy", "[", 
       RowBox[{"coeffGrid", ",", " ", 
        RowBox[{
         RowBox[{"Replace", "[", 
          RowBox[{"dir", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"First", "\[Rule]", "Last"}], ",", " ", 
             RowBox[{"Last", "\[Rule]", "First"}]}], "}"}]}], "]"}], 
         "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "&"}], ")"}]}]}], "]"}]}], ";", 
     "\n", "    ", 
     RowBox[{"signFlips", " ", "=", " ", 
      RowBox[{"Total", "@", 
       RowBox[{"Abs", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Values", "[", 
          RowBox[{
           RowBox[{"Differences", "@*", "Sign"}], "/@", "gridChunks"}], "]"}],
          "]"}]}]}]}], ";", "\n", "    ", 
     RowBox[{"Greater", "@@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"signFlips", "/", "2."}], ",", " ", 
        RowBox[{
         RowBox[{"Length", "[", "coeffGrid", "]"}], "/", "10"}]}], 
       "}"}]}]}]}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ebe22df6-6968-487b-80d4-30d5a35fed98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"smoothOutCoeffs", "[", 
   RowBox[{"coeffGrid_", ",", " ", 
    RowBox[{"dir", ":", "Automatic", ":", "Automatic"}], ",", " ", 
    RowBox[{"cutoff", ":", 
     RowBox[{"_", "?", "NumericQ"}], ":", "0"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"needsSmoothingTest", "[", 
     RowBox[{"coeffGrid", ",", " ", "Last"}], "]"}], ",", "\n", "\t  ", 
    RowBox[{"Fold", "[", "\n", "\t    ", 
     RowBox[{
      RowBox[{
       RowBox[{"smoothOutCoeffs", "[", 
        RowBox[{"#", ",", " ", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"cutoff", "+", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], ",", "\n", 
      "  \t  ", "coeffGrid", ",", " ", "\n", "  \t  ", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", "\n", "  \t    ", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Last", ",", " ", "First"}], "}"}], ",", " ", "6"}], 
           "]"}]}], ",", "\n", "  \t    ", 
         RowBox[{"(*", "1", "**)"}], 
         RowBox[{"0", 
          RowBox[{"Riffle", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", " ", "5"}], "]"}], ",", " ", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", " ", "5"}], "]"}]}], "]"}]}]}], "\n", 
        "  \t    ", "}"}]}]}], "\n", "  \t  ", "]"}], ",", "\n", "    ", 
    "coeffGrid"}], "\n", "    ", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"ceb94ef9-4f1b-4228-a1fa-33b962a36e8b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getSCFOverlapMatrix\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"908a3036-60bb-427c-8c2a-e8d7651250c2"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Old\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c037e2b9-8f66-42f0-ba71-4baf7e316d09"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"getSCFOverlapMatrix", "[", 
    RowBox[{
    "scfWavefunctions_", ",", " ", "dvrWavefunctions_", ",", " ", "states_", 
     ",", " ", "scalings_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"fleng", ",", "\n", "\t\t\t", 
       RowBox[{"overlapStates", "=", "states"}], ",", "\n", "\t\t\t", 
       RowBox[{"scalingThings", "=", "scalings"}], ",", "\n", "\t\t\t", 
       "blerp", ",", "\n", "\t\t\t", "baseWfnsSCF", ",", "\n", "\t\t\t", 
       "baseWfnsDVR", ",", "\n", "\t\t\t", "expansionCoeffs", ",", "\n", 
       "\t\t\t", "blerpDVR", ",", "\n", "\t\t\t", "coeffs", ",", "\n", 
       "\t\t\t", "overlaps", ",", "\n", "\t\t\t", "goodPlace", ",", "\n", 
       "\t\t\t", "goodPos", ",", "\n", "\t\t\t", "goodPairs", ",", "\n", 
       "\t\t\t", "goodSparseOneQuantum"}], "\n", "\t\t\t", "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "overlapStates"}], "!=", 
         RowBox[{"Length", "@", "scalingThings"}]}], ",", " ", 
        RowBox[{"Throw", "@", "\"\<I'm sad\>\""}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"fleng", "=", 
       RowBox[{"Length", "[", "scfWavefunctions", "]"}]}], ";", "\n", "\t\t", 
      
      RowBox[{"blerp", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"scfWavefunctions", ",", " ", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"blerpDVR", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"dvrWavefunctions", ",", " ", 
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"baseWfnsSCF", "=", "\n", "\t\t\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
            "blerp"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "overlapStates"}], "}"}]}], "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"baseWfnsDVR", "=", "\n", "\t\t\t", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "@@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
            "blerpDVR"}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "overlapStates"}], "}"}]}], "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"coeffs", "=", "\n", "\t\t\t", 
       RowBox[{"Apply", "[", "\n", "\t\t\t\t", 
        RowBox[{"Join", ",", "\n", "\t\t\t\t", 
         RowBox[{"scalingThings", "*", "\n", "\t\t\t\t", 
          RowBox[{"Table", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Transpose", "@", "\n", "\t\t\t\t\t\t", 
             RowBox[{"Table", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Diagonal", "[", 
                 RowBox[{"dvrWfs", "@", 
                  RowBox[{"\"\<Overlaps\>\"", "[", "scfWfs", "]"}]}], "]"}], 
                "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"scfWfs", ",", " ", "baseWfnsSCF"}], "}"}]}], "\n", 
              "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"dvrWfs", ",", " ", "baseWfnsDVR"}], "}"}]}], "\n", 
           "\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"overlaps", "=", 
       RowBox[{"coeffs", ".", 
        RowBox[{"Transpose", "[", "coeffs", "]"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{"overlaps", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"goodPlace", "=", 
          RowBox[{"Pick", "[", 
           RowBox[{
            RowBox[{"Range", "[", "fleng", "]"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", 
             "scfWavefunctions"}]}], "]"}]}], ";", "\n", "\t\t\t", 
         RowBox[{"goodPos", "=", 
          RowBox[{"Join", "@@", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "+", "goodPlace"}], "&"}], ",", " ", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "overlapStates", "]"}], "-", "1"}]}], 
               "]"}], "*", "fleng"}]}], "]"}]}]}], ";", "\n", "\t\t\t", 
         RowBox[{"goodPairs", "=", 
          RowBox[{"Developer`ToPackedArray", "@", 
           RowBox[{"Tuples", "[", 
            RowBox[{"goodPos", ",", " ", "2"}], "]"}]}]}], ";", "\n", 
         "\t\t\t", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{"goodPairs", "\[Rule]", 
            RowBox[{"Flatten", "@", "overlaps"}]}], ",", " ", 
           RowBox[{
            RowBox[{"Length", "[", "overlapStates", "]"}], "*", "fleng", "*", 
            
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], " ", ",", " ", "0."}], 
          "]"}]}]}], "\n", "\t\t\t", "}"}]}]}], "\n", "\t\t", "]"}]}], 
  "*)"}]], "CodeInput",ExpressionUUID->"1700be8c-9e4d-45bf-94ef-9b4127c5a73c"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]New\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"5d7860df-5fa6-42a0-91a6-b9ddb733b298"],

Cell[BoxData[{
 RowBox[{"getSCFOverlapMatrix", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"getSCFOverlapMatrix", "[", "\n", "\t", 
   RowBox[{
   "scfWavefunctions_", ",", " ", "dvrWavefunctions_", ",", " ", "\n", "\t", 
    "states_", ",", " ", "\n", "\t", "scalings_", ",", " ", "\n", "\t", 
    "grid_", ",", " ", "extrapGrid_", ",", "\n", "\t", "symmetries_", ",", 
    "\n", "\t", 
    RowBox[{"coefficientProcessing_:", "None"}]}], "\n", "\t", "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "nstates", ",", " ", "fleng", ",", " ", "pickSpec", ",", " ", "pickComp",
       ",", "\n", "\t\t\t", "gg", ",", " ", "blerp", ",", " ", "blerpDVR", 
      ",", " ", "\n", "\t\t\t", "baseWfnsSCF", ",", " ", "baseWfnsDVR", ",", 
      " ", "\n", "\t\t\t", "coeffs", ",", " ", "coeffLists", ",", "\n", 
      "\t\t\t", "baseGrid", ",", " ", "extrapCoeffs", ",", " ", "\n", 
      "\t\t\t", "coeffInterps", ",", " ", "newCoeffs", ",", "\n", "\t\t\t", 
      "fuckTheseFuckingPointsFuckThisIDontWantToDoIt", ",", "\n", "\t\t\t", 
      "coeffList"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"nstates", " ", "=", " ", 
      RowBox[{"Length", "@", "states"}]}], ";", "\n", "\t\t", 
     RowBox[{"pickSpec", " ", "=", " ", 
      RowBox[{"Pick", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "scfWavefunctions", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "=!=", "$Failed"}], "&"}], "/@", 
         "scfWavefunctions"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"pickComp", " ", "=", " ", 
      RowBox[{"Pick", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "scfWavefunctions", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "===", "$Failed"}], "&"}], "/@", 
         "scfWavefunctions"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"fleng", " ", "=", " ", 
      RowBox[{"Length", "[", "pickSpec", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"debugPrint", "[", "\"\<Loading base coefficients\>\"", "]"}], 
     ";", "\n", "   ", 
     RowBox[{"blerp", "=", 
      RowBox[{"scfWavefunctions", "[", 
       RowBox[{"[", "pickSpec", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"blerpDVR", "=", 
      RowBox[{"dvrWavefunctions", "[", 
       RowBox[{"[", "pickSpec", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"gg", " ", "=", " ", 
      RowBox[{"Join", "@@", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"grid", "[", 
          RowBox[{"[", "pickSpec", "]"}], "]"}], ",", " ", "nstates"}], 
        "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"baseWfnsSCF", "=", "\n", "\t\t\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
           "blerp"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "states"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"baseWfnsDVR", "=", "\n", "\t\t\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Join", "@@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"{", "n", "}"}], "]"}], "]"}], "&"}], ",", " ", 
           "blerpDVR"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "states"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"coeffs", "=", "\n", "\t\t\t", 
      RowBox[{"Apply", "[", "\n", "\t\t\t\t", 
       RowBox[{"Join", ",", "\n", "\t\t\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Transpose", "@", "\n", "\t\t\t\t\t\t", 
           RowBox[{"Table", "[", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Developer`ToPackedArray", "[", 
              RowBox[{"Diagonal", "[", 
               RowBox[{"dvrWfs", "@", 
                RowBox[{"\"\<Overlaps\>\"", "[", "scfWfs", "]"}]}], "]"}], 
              "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"scfWfs", ",", " ", "baseWfnsSCF"}], "}"}]}], "\n", 
            "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"dvrWfs", ",", " ", "baseWfnsDVR"}], "}"}]}], "\n", 
         "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     
     RowBox[{"coeffLists", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"gg", ",", " ", 
          RowBox[{"coeffs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", 
             RowBox[{"{", "#", "}"}]}], "]"}], "]"}], ",", " ", "2"}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", "nstates", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"debugPrint", "[", "\"\<Extrapolating coefficients\>\"", "]"}], 
     ";", "\n", "\t\t", 
     RowBox[{"coeffInterps", " ", "=", " ", "\n", "\t\t\t", 
      RowBox[{"Table", "[", "\n", "\t\t\t  ", 
       RowBox[{
        RowBox[{
         RowBox[{"coeffList", " ", "=", " ", 
          RowBox[{"coeffLists", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ";", "\n", "\t\t\t  ", 
         RowBox[{
         "debugPrint", "[", "\"\<Loading base function data\>\"", "]"}], ";", 
         "\n", "\t\t\t  ", 
         RowBox[{"baseGrid", "=", "\n", "\t\t\t    ", 
          RowBox[{"Join", "[", "\n", "\t\t\t      ", 
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"grid", "[", 
               RowBox[{"[", "pickComp", "]"}], "]"}], ",", " ", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"10", "^", "9"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Length", "@", "pickComp"}], ",", " ", "1"}], 
                 "}"}]}], "]"}], ",", " ", "2"}], "]"}], ",", "\n", 
            "\t\t\t      ", 
            RowBox[{"coeffList", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", "fleng"}]}], " ", ";;",
                " ", 
               RowBox[{"i", "*", "fleng"}]}], "]"}], "]"}]}], "\n", 
           "\t\t\t      ", "]"}]}], ";", "\n", "\t\t\t  ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"u", "=", 
               RowBox[{"Unique", "[", "coefficientsGrid", "]"}]}], "}"}], ",",
              " ", 
             RowBox[{
              RowBox[{"u", "=", "baseGrid"}], ";", 
              RowBox[{"dumpSymbol", "[", "u", "]"}]}]}], "]"}], ";"}], "*)"}],
          "\n", "\t\t\t  ", 
         RowBox[{"debugPrint", "[", "\"\<Extrapolating off grid\>\"", "]"}], 
         ";", "\n", "\t\t\t  ", 
         RowBox[{"extrapCoeffs", "=", "\n", "\t\t\t    ", 
          RowBox[{"extrapolatedFunction", "[", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"baseGrid", ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "2"}], "}"}], ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "^", 
                RowBox[{"Range", "[", "1", "]"}]}], "&"}], ",", " ", 
              RowBox[{
               RowBox[{"#", "^", 
                RowBox[{"Range", "[", "1", "]"}]}], "&"}]}], "}"}], ",", "\n",
             "\t\t\t\t\t\t\t", "\"\<Both\>\"", ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"symmetries", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"DefaultValue", "[", "0", "]"}]}], "\n", "\t\t\t\t\t\t\t",
            "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"dumpValue", "[", "\n", "\t\t\t\t  ", 
            RowBox[{
             RowBox[{"ToExpression", "[", 
              RowBox[{"\"\<extrapolatedCoeffs$\>\"", "<>", 
               RowBox[{"ToString", "@", "i"}], "<>", 
               RowBox[{"ToString", "@", "j"}]}], "]"}], ",", "\n", 
             "\t\t\t\t  ", "extrapCoeffs", ",", "\n", "\t\t\t\t  ", "False"}],
             "\n", "\t\t\t\t  ", "]"}], ";"}], "*)"}], "\n", "\t\t\t\t", 
         RowBox[{"extrapCoeffs", " ", "=", "\n", "\t\t\t\t  ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"coefficientProcessing", "===", "None"}], ",", "\n", 
            "\t\t\t\t    ", 
            RowBox[{"smoothOutCoeffs", "[", "extrapCoeffs", "]"}], ",", "\n", 
            "\t\t\t\t    ", 
            RowBox[{
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"Quiet", "@", 
                RowBox[{"coefficientProcessing", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ",", "\n", 
               "\t\t\t\t      ", 
               RowBox[{"{", "\n", "\t\t\t\t        ", 
                RowBox[{"p_Part", ":>", "smoothOutCoeffs"}], "\n", 
                "\t\t\t\t        ", "}"}]}], "\n", "\t\t\t\t      ", "]"}], 
             "[", "extrapCoeffs", "]"}]}], "\n", "\t\t\t\t    ", "]"}]}], ";",
          " ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"a", " ", "total", " ", "hack"}], "..."}], " ", "*)"}], 
         "\n", "\t\t\t\t", 
         RowBox[{"dumpValue", "[", "\n", "\t\t\t\t  ", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<extrapolatedCoeffs$\>\"", "<>", 
             RowBox[{"ToString", "@", "i"}], "<>", 
             RowBox[{"ToString", "@", "j"}]}], "]"}], ",", "\n", "\t\t\t\t  ",
            "extrapCoeffs", ",", "\n", "\t\t\t\t  ", "False"}], "\n", 
          "\t\t\t\t  ", "]"}], ";", "\n", "\t\t\t\t", 
         RowBox[{
         "debugPrint", "[", "\"\<Constructing interpolation off grid\>\"", 
          "]"}], ";", "\n", "\t\t\t\t", 
         RowBox[{
         "fuckTheseFuckingPointsFuckThisIDontWantToDoIt", "=", "\n", 
          "\t\t\t\t  ", 
          RowBox[{"DeleteDuplicatesBy", "[", "\n", "\t\t\t\t    ", 
           RowBox[{
            RowBox[{"Join", "[", "\n", "    \t\t\t  \t", 
             RowBox[{
              RowBox[{"extrapCoeffs", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", 
                 RowBox[{";;", "2"}]}], "]"}], "]"}], ",", " ", "\n", "  ", 
              "  ", "  ", "\t\t\t\t", 
              RowBox[{"List", "/@", 
               RowBox[{"Clip", "[", 
                RowBox[{"extrapCoeffs", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], "]"}]}], ",", 
              "\n", "  ", "    \t\t\t\t", "2"}], "\n", "  ", "    \t\t\t\t", 
             "]"}], ",", "\n", "  ", "    \t\t  ", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{";;", "2"}], "]"}], "]"}], ",", " ", ".01"}], "]"}], 
             "&"}]}], "\n", "      \t\t  ", "]"}]}], ";", "\n", "      ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "dumpSymbol", "[", "fuckTheseFuckingPointsFuckThisIDontWantToDoIt",
             "]"}], ";"}], "*)"}], "\n", "\t\t\t\t", 
         RowBox[{
         "fuckTheseFuckingPointsFuckThisIDontWantToDoIt", "//", 
          "Interpolation"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", 
          RowBox[{"Length", "@", "coeffLists"}]}], "}"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "nstates"}], "}"}]}], "\n", "\t\t\t\t", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"coeffs", " ", "=", " ", "\n", "\t\t\t", 
      RowBox[{"Normalize", "/@", 
       RowBox[{"Transpose", "[", "\n", "\t\t\t\t", 
        RowBox[{"Table", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Apply", "[", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"Join", ",", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"interp", "=", "#"}], "}"}], ",", "\n", "\t", "\t", 
                "\t", "\t\t\t\t", 
                RowBox[{"interp", "@@", 
                 RowBox[{"Transpose", "[", "extrapGrid", "]"}]}]}], "\n", 
               "\t", "\t", "\t", "\t\t\t\t", "]"}], "&"}], "/@", 
             "interpList"}]}], "\n", "\t", "\t\t\t\t\t", "]"}], ",", "\n", 
          "\t", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"interpList", ",", " ", "coeffInterps"}], "}"}]}], "\n", 
         "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t", "]"}]}]}], ";", "\n", "\t\t", 
     
     RowBox[{"coeffs", ".", 
      RowBox[{"Transpose", "[", "coeffs", "]"}]}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"31a33e3d-6787-49d7-8789-181b5faed4e2"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Wavefunctions\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"e1c82d19-8144-4261-b990-c86fdac809b1"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Kinetic Energy\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"53c7a4b5-b6c4-4f2d-8502-fb8e0c1eeca6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coupledKineticEnergy", "//", "Clear"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coupledKineticEnergy", "[", 
    RowBox[{
    "dvr_", ",", " ", "grid_", ",", " ", "overlapMat_", ",", " ", "i___"}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"lens", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"{", "i", "}"}], "]"}]}], ",", "\n", "\t\t\t", "woop", ",", 
       "\n", "\t\t\t", 
       RowBox[{"waap", "=", 
        RowBox[{"dvr", "[", 
         RowBox[{"\"\<KineticEnergy\>\"", ",", " ", 
          RowBox[{"\"\<Points\>\"", "\[Rule]", 
           RowBox[{"Dimensions", "[", "grid", "]"}]}]}], "]"}]}], ",", "\n", 
       "\t\t\t", "klap"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"woop", "=", "overlapMat"}], ";", "\n", "\t\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Echo", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dimensions", "[", "grid", "]"}], ",", " ", 
           RowBox[{"Dimensions", "[", "waap", "]"}], ",", " ", 
           RowBox[{"Dimensions", "[", "woop", "]"}]}], "}"}], "]"}], ";"}], 
       "*)"}], "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "woop", "]"}], "=!=", 
         RowBox[{"lens", "*", 
          RowBox[{"Length", "[", "waap", "]"}]}]}], ",", "\n", "\t\t\t", 
        RowBox[{"Throw", "[", "\n", "\t\t\t\t", 
         RowBox[{
         "\"\<Overlap matrix misdimensioned, `` overlaps, `` functions, `` \
points\>\"", "~", "TemplateApply", "~", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Dimensions", "[", "woop", "]"}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{"lens", "*", 
             RowBox[{"Dimensions", "[", "waap", "]"}]}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"Dimensions", "[", "grid", "]"}]}], "\n", "\t\t\t\t", 
           "}"}]}], "\n", "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"klap", "=", "\n", "\t\t\t\t", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"{", 
               RowBox[{"lens", ",", " ", "lens"}], "}"}]}], "]"}], ",", " ", 
            "waap"}], "]"}]}], ";", "\n", "\t\t\t", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"woop", "*", "klap"}], "]"}]}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "this", " ", "_must", "_", " ", "be", " ", "a", " ", "SparseArray", 
         " ", "to", " ", "be", " ", "manageable", " ", "later"}], " ", "*)"}],
        "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"2a7572f4-224b-4bd4-a3f5-c2462bb9cc0b"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Potential Energy\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f3b46058-8aee-4b22-ba2c-834fbcea0702"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getPot\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e4ba1be0-6409-45dc-8931-8805ca09c574"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getPot", "[", 
    RowBox[{"wfns_", ",", " ", "i_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Keys", "[", "wfns", "]"}], ",", "\n", "\t\t", 
     RowBox[{"Developer`ToPackedArray", "@", 
      RowBox[{"Map", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "===", "$Failed"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"10.", "^", "9"}], "}"}], ",", " ", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"{", "i", "}"}], "]"}], "]"}]}], "]"}], "&"}], ",", "\n",
         "\t", "\t\t", 
        RowBox[{"Values", "@", "wfns"}]}], "\n", "\t\t\t", "]"}]}], ",", "\n",
      "\t\t", "2"}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"da1fd090-3590-453b-a1ad-38faa795e30c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]averagedPot\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"ecfc0312-93bc-44d1-a019-056766772b75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"averagedPot", "[", 
   RowBox[{"wnfs_", ",", " ", "i_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Developer`ToPackedArray", "@", 
   RowBox[{"Map", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "===", "$Failed"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"10.", "^", "9"}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"{", "i", "}"}], "]"}], "]"}]}], "]"}], "&"}], ",", "\n", 
     "\t\t", 
     RowBox[{"Values", "@", "wnfs"}]}], "\n", "\t\t", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"6195f326-1e52-4cbc-9b50-69a77305963a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]extrapolatedPotential\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2cebf6d0-acbc-4ec0-a325-f4a055941f59"],

Cell[BoxData[
 RowBox[{
  RowBox[{"extrapolatedPotential", "[", 
   RowBox[{"grid_", ",", " ", "wfns_", ",", " ", "i_"}], "]"}], ":=", "\n", 
  "  ", 
  RowBox[{"Module", "[", "\n", "    ", 
   RowBox[{
    RowBox[{"{", "\n", "      ", 
     RowBox[{
     "pot", ",", "\n", "      ", "extrap", ",", "\n", "      ", "interp"}], 
     "\n", "      ", "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"debugPrint", "[", "\"\<Extracting potential\>\"", "]"}], ";", 
     "\n", "    ", 
     RowBox[{"pot", " ", "=", " ", 
      RowBox[{"getPot", "[", 
       RowBox[{"wfns", ",", " ", "i"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"debugPrint", "[", "\"\<Extrapolating potential\>\"", "]"}], ";",
      "\n", "    ", 
     RowBox[{"extrap", " ", "=", "\n", "      ", 
      RowBox[{"extrapolatedFunction", "[", "\n", "\t\t\t\t\t", 
       RowBox[{"pot", ",", "\n", "\t\t\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"10", "^", "9."}], "-", "1"}]}], "}"}], ",", "\n", "\t", 
        "\t\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", "1", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".2", "]"}]}], "}"}], ",", "\n", "\t", 
        "\t\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "^", 
            RowBox[{"Range", "[", "6", "]"}]}], "&"}], ",", " ", 
          RowBox[{
           RowBox[{"#", "^", 
            RowBox[{"Range", "[", "1", "]"}]}], "&"}]}], "}"}]}], "\n", 
       "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"dumpValue", "[", "\n", "\t\t  ", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<extrapPot$\>\"", "<>", 
         RowBox[{"ToString", "@", "i"}]}], "]"}], ",", "\n", "\t\t  ", 
       "extrap", ",", "\n", "\t\t  ", "False"}], "\n", "\t\t  ", "]"}], ";", 
     "\n", "\t\t", 
     RowBox[{"interp", "=", "\n", "\t\t\t\t", 
      RowBox[{"Interpolation", "[", "\n", "\t\t\t\t\t", 
       RowBox[{"extrap", ",", "\n", "\t\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t\t", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"10.", "^", "9"}], "&"}], ")"}], ",", "\n", 
            "\t\t\t\t\t\t\t", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], "\n", 
           "\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t\t", "}"}]}], "\n", 
       "\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"interp", "@@", 
      RowBox[{"Transpose", "[", "grid", "]"}]}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"1c9fbaa5-56dc-4ce7-8e25-86c448978958"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]coupledPot\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b84af99c-c000-4166-bbd1-0b726e9f12f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"coupledPot", "[", 
    RowBox[{"grid_", ",", " ", "wfns_", ",", " ", "i___"}], "]"}], ":=", "\n",
    "\t", 
   RowBox[{"SparseArray", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Band", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "\[Rule]", "\n", "\t\t\t", 
     
     RowBox[{"Developer`ToPackedArray", "@", "\n", "\t\t\t\t", 
      RowBox[{"Apply", "[", 
       RowBox[{"Join", ",", " ", "\n", "\t\t\t\t  ", 
        RowBox[{"Map", "[", "\n", "\t\t\t\t    ", 
         RowBox[{
          RowBox[{
           RowBox[{"extrapolatedPotential", "[", 
            RowBox[{"grid", ",", " ", "wfns", ",", " ", "#"}], "]"}], "&"}], 
          ",", " ", "\n", "\t\t\t\t    ", 
          RowBox[{"{", "i", "}"}]}], "\n", "\t\t\t\t    ", "]"}]}], "\n", 
       "\t\t\t\t  ", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"e4921e29-dc6c-4d69-87a7-53296fc49632"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Grid\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.757804645745041*^9, 
  3.757804646235776*^9}},ExpressionUUID->"7f871e70-ebb2-4c72-a2f9-\
e11529f1e675"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coupledGrid", "[", 
   RowBox[{"grid_", ",", " ", "i__"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"grid", "@", "\"\<Grid\>\""}]}], ",", " ", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "i", "}"}], "]"}]}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"CoordinateGridObject", "@", "\n", "\t\t\t", 
     RowBox[{"Apply", "[", "\n", "\t\t\t\t", 
      RowBox[{"Join", ",", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"m", "=", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "*", "#", "*", 
                  RowBox[{"Min", "[", "g", "]"}]}], ",", " ", "0"}], "}"}], 
               ",", " ", 
               RowBox[{
                RowBox[{"Dimensions", "[", "g", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{"g", "-", "m"}]}], "\n", "\t\t\t\t\t", "]"}], "&"}], "/@", 
        
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"l", "-", "1"}]}], "]"}]}]}], "\n", "\t\t\t\t", "]"}]}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"3a4a9b42-1314-46be-a06f-e91abdde22e0"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getWavefunctions\[RightFloor] ", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"33850a10-d49b-4558-849d-5acafef19649"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getWavefunctions", "[", 
    RowBox[{
    "wfns_", ",", " ", "dvr_", ",", " ", "overlaps_", ",", " ", "grid_", ",", 
     " ", "states___"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"WavefunctionsObject", "[", "\n", "\t\t", 
    RowBox[{"\"\<Diagonalize\>\"", ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Making kinetic energy\>\"", "]"}], ";", 
      "\n", "\t\t", 
      RowBox[{"coupledKineticEnergy", "[", 
       RowBox[{
       "dvr", ",", " ", "grid", ",", " ", "overlaps", ",", " ", "states"}], 
       "]"}]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Making potential energy\>\"", "]"}], 
      ";", "\n", "\t\t", 
      RowBox[{"coupledPot", "[", 
       RowBox[{
        RowBox[{"grid", "[", "\"\<Points\>\"", "]"}], ",", " ", "wfns", ",", 
        " ", "states"}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Making grid\>\"", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"coupledGrid", "[", 
       RowBox[{"grid", ",", " ", "states"}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"debugPrint", "[", "\"\<Diagonalizing\>\"", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", "100"}]}], ",", 
     "\n", "\t", "\t", 
     RowBox[{"\"\<ArnoldiIterations\>\"", "\[Rule]", "10000"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<PruningEnergy\>\"", "\[Rule]", 
      RowBox[{"Scaled", "[", ".9", "]"}]}], ",", "\n", "\t", "\t", 
     RowBox[{"\"\<ValidateHamiltonian\>\"", "\[Rule]", "False"}]}], "\n", 
    "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"abfa28db-37a3-48d8-83bc-1d911811bb70"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]pullProjections\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"da2ff2cb-e428-4c0b-be94-d435c3785d9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pullProjections", "[", 
   RowBox[{"wfns_", ",", " ", "grid_", ",", " ", "states_"}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g2", "=", "grid"}], ",", " ", 
      RowBox[{"g", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"grid", "[", "\"\<Points\>\"", "]"}], "]"}]}], ",", " ", 
      RowBox[{"len", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "grid", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"couplings", "=", "states"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"MapThread", "[", "\n", "\t", "\t\t", 
     RowBox[{
      RowBox[{"Function", "[", "\n", "\t", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"WavefunctionsObject", "[", "\n", "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", "\n", "\t", 
             "\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{
               "GridFunctionObject", "[", "\n", "\t", "\t\t\t\t\t\t", 
                RowBox[{"g2", ",", "\n", "\t", "\t\t\t\t\t\t", 
                 RowBox[{"#", "@", "\"\<Values\>\""}]}], "\n", "\t", 
                "\t\t\t\t\t\t", "]"}], "&"}], "/@", 
              RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}]}]}], "\n", 
            "\t", "\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t", "g2"}], "\n", 
          "\t\t\t\t\t", "]"}], "&"}], "@", 
        RowBox[{"wfns", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", 
           RowBox[{"#", ";;", "#2"}]}], "]"}], "]"}]}], "\n", "\t", "\t\t\t", 
       "]"}], ",", "\n", "\t", "\t\t", 
      RowBox[{"{", "\n", "\t", "\t\t\t", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{
             RowBox[{"Length", "[", "couplings", "]"}], "-", "1"}]}], "]"}], 
          "*", "len"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "couplings"}], "]"}], "*", "len"}]}], "\n", 
       "\t\t\t\t", "}"}]}], "\n", "\t", "\t\t", "]"}]}], "\n", "\t", "\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"e2a02306-9b5c-4509-8cf6-63becd9e85f1"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Spectra\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"41295d22-d536-4e3c-842b-f5a18eb32e51"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]rebuildInterpolation\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"60760181-42a8-4d52-8f40-419046f10e7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rebuildInterpolation", "[", "interp_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Interpolation", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Join", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"interp", "[", "\"\<Grid\>\"", "]"}], ",", " ", "3"}], "]"}], 
      ",", "\n", "\t", "\t\t", 
      RowBox[{"List", "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"interp", "[", "\"\<ValuesOnGrid\>\"", "]"}], ",", " ", 
         "3"}], "]"}]}], ",", "\n", "\t", "\t\t", "2"}], "\n", "\t", "\t\t", 
     "]"}], ",", "\n", "\t", "\t", 
    RowBox[{"{", "\n", "\t", "\t\t", 
     RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
      RowBox[{"{", "\n", "\t", "\t\t\t\t", 
       RowBox[{
        RowBox[{"0.", "&"}], ",", "\n", "\t", "\t\t\t\t", 
        RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], "\n", "\t", 
       "\t\t\t\t", "}"}]}], "\n", "\t", "\t\t", "}"}]}], "\n", "\t", "\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8f4ace4c-b005-46fc-9f41-ee00f2f2c5d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]interpolatedDipoleSurface\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"feb546b7-f55d-4f9e-a1a9-6d41bbd5383b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interpolatedDipoleSurface", "[", 
   RowBox[{"interp_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"a_", ",", " ", "s_"}], "}"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"R1", "=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2.", "]"}]}], 
        RowBox[{"(", 
         RowBox[{"a", "+", "s"}], ")"}]}]}], ",", " ", 
      RowBox[{"R2", "=", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2.", "]"}]}], 
        RowBox[{"(", 
         RowBox[{"s", "-", "a"}], ")"}]}]}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"interp", "[", 
      RowBox[{
       RowBox[{"Sequence", "@@", 
        RowBox[{"Transpose", "[", "#", "]"}]}], ",", " ", "R1", ",", " ", 
       "R2"}], "]"}], "&"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"81cc65bf-514c-47ed-87a1-965df3fc2b44"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getDipoleVecs\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"73411b98-4654-4666-9b02-4187a1e3c2fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getDipoleVecs", "[", 
   RowBox[{"wfns_", ",", " ", "gps_", ",", " ", "interp_"}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"MapIndexed", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fg", "=", "gps"}], "}"}], ",", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "=!=", "$Failed"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Developer`ToPackedArray", "[", 
          RowBox[{
           RowBox[{"interpolatedDipoleSurface", "[", 
            RowBox[{"interp", ",", " ", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], "]"}], "@", 
           "fg"}], "]"}], ",", "\n", "\t", "\t\t\t", "$Failed"}], "\n", "\t", 
        "\t\t\t", "]"}], "&"}]}], "\n", "\t", "\t\t", "]"}], ",", "\n", "\t", 
    "\t", 
    RowBox[{"(*", " ", 
     RowBox[{
     "This", " ", "is", " ", "just", " ", "here", " ", "for", " ", "the", " ",
       "keys", " ", "and", " ", "the", " ", "$Failed"}], " ", "*)"}], "\n", 
    "\t", "\t", "wfns"}], "\n", "\t", "\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"20ac3841-993e-43c9-96c2-5d48e0974f10"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getTransitionMoments\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"82175293-e6db-4626-9fbc-33431e06710a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getTransitionMoments", "[", 
   RowBox[{"wfns_", ",", " ", "dipoles_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"MapThread", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "=!=", "$Failed"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"#", "@", 
        RowBox[{"\"\<TransitionMoments\>\"", "[", "\n", "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"#2", ",", " ", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0.", ",", " ", 
              RowBox[{"Length", "[", "#2", "]"}]}], "]"}], ",", " ", "\n", 
            "\t", "\t\t\t\t\t", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0.", ",", " ", 
              RowBox[{"Length", "[", "#2", "]"}]}], "]"}]}], "\n", "\t", 
           "\t\t\t\t\t", "}"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", 
            RowBox[{"1", ";;", 
             RowBox[{"Length", "@", 
              RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}]}]}]}], "}"}]}],
          "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", "$Failed"}], "\n",
       "\t", "\t\t", "]"}], "&"}], ",", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"wfns", ",", "\n", "\t\t\t", "dipoles"}], "\n", "\t\t\t", 
     "}"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"55483f95-dc76-4704-948c-8f913312674c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getTransitionWavefunctions\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"0aef49f4-9781-4aa9-9be1-a56f705475ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getTransitionWavefunctions", "[", 
   RowBox[{"projs_", ",", " ", "gsData_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Map", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"WavefunctionsObject", "[", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"#", "[", "\"\<Energies\>\"", "]"}], ",", " ", 
           RowBox[{"gsData", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", " ", "\n", "\t", 
         "\t\t\t", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"#", "[", "\"\<Wavefunctions\>\"", "]"}], ",", " ", 
           RowBox[{"gsData", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\n", "\t", "\t\t\t", 
        "}"}], ",", " ", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"gsData", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], "\n", 
      "\t", "\t\t", "]"}], "&"}], ",", "\n", "\t\t", "projs"}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"8ca11a66-4c30-4d9c-abe2-12b321a98bf8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getIntensities\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4db955b2-e989-4362-bcd9-5c436386de19"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getIntensities", "[", 
   RowBox[{"wfns_", ",", " ", "states_", ",", " ", "gridTms_", ",", " ", 
    RowBox[{"problemStates", ":", 
     RowBox[{"{", "__Integer", "}"}], ":", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "5"}], "}"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "baseTmoms", ",", "\n", "\t\t\t", "tmomLists", ",", "\n", "\t\t\t", 
      "tmGrid", ",", "\n", "\t\t\t", "tmInterps", ",", "\n", "\t\t\t", "tms", 
      ",", "\n", "\t\t\t", "wfGrid"}], "\n", "\t\t\t", "}"}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"tmGrid", " ", "=", " ", 
      RowBox[{"gridTms", "[", "\"\<Grid\>\"", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"tmInterps", " ", "=", "\n", "\t\t\t", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Table", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"lInter", "[", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "should", " ", "definitely", " ", "check", " ", "my", " ", "grid",
              " ", "though"}], "..."}], " ", "*)"}], "\n", "\t\t\t\t  ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"it", "'"}], "s", " ", "crazy", " ", "how", " ", 
                   "much", " ", "of", " ", "a", " ", "hack", " ", "this", " ",
                    "is", " ", "but", " ", "I", " ", "am", " ", "currently", 
                   " ", "in", " ", "get"}], "-", "something", "-", 
                  RowBox[{"out", " ", "mode"}]}], "..."}], " ", "*)"}], "\n", 
               "\t\t\t\t    ", 
               RowBox[{"dumpValue", "[", "\n", "\t\t\t\t\t    ", 
                RowBox[{
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"\"\<smoothGridTMs$\>\"", "<>", 
                   RowBox[{"ToString", "@", "i"}], "<>", 
                   RowBox[{"ToString", "[", "state", "]"}]}], "]"}], ",", 
                 "\n", "  \t\t\t\t\t  ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{"problemStates", ",", " ", "state"}], "]"}], ",", 
                   " ", 
                   RowBox[{"correctRowFlips", "@", "#"}], ",", " ", "#"}], 
                  "]"}], ",", "\n", "  \t\t\t\t\t  ", "False"}], "\n", 
                "            ", "]"}], ",", "\n", "          ", "#"}], "\n", 
              "\t\t\t\t    ", "]"}], "&"}], "@", 
            RowBox[{"Join", "[", 
             RowBox[{"tmGrid", ",", " ", 
              RowBox[{"gridTms", "[", 
               RowBox[{"[", 
                RowBox[{
                "\"\<Values\>\"", ",", " ", "state", ",", " ", "All", ",", 
                 " ", 
                 RowBox[{"{", "i", "}"}]}], "]"}], "]"}], ",", " ", "2"}], 
             "]"}]}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"{", "\n", "\t\t\t\t\t  ", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "&"}], ",", " ", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
              "}"}]}], "\n", "\t\t\t\t\t  ", "}"}]}], "\n", "\t\t\t\t\t", 
          "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "3"}], "}"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{"state", ",", " ", "states"}], "}"}]}], "\n", "\t\t\t\t", 
        "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"wfGrid", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Normal", "@", 
         RowBox[{
          RowBox[{"wfns", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Grid\>\"", "]"}]}], ",", 
        " ", "1"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "for", " ", "some", " ", "reason", " ", "\"\<Points\>\"", " ", 
       "stopped", " ", 
       RowBox[{"working", "?"}]}], " ", "*)"}], "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"ListQ", "@", "wfGrid"}]}], ",", " ", "\n", "\t\t  ", 
       RowBox[{
        RowBox[{"Throw", "[", 
         RowBox[{
         "StringForm", "[", "\"\<Head is not List for wfns[\\\"Grid\\\"]\>\"",
           "]"}], "]"}], ";"}]}], "\n", "\t\t  ", "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"dumpSymbol", "[", "wfGrid", "]"}], ";", "\n", "\t\t", 
       RowBox[{"dumpSymbol", "[", "tmInterps", "]"}], ";"}], "*)"}], "\n", 
     "\t\t", 
     RowBox[{"tms", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Through", "[", 
          RowBox[{"#", "@@", 
           RowBox[{"Transpose", "[", "wfGrid", "]"}]}], "]"}], "]"}], "&"}], "/@",
        "tmInterps"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"dumpSymbol", "[", "tms", "]"}], ";"}], "*)"}], "\n", "\t\t", 
     RowBox[{"baseTmoms", "=", "\n", "\t\t  ", 
      RowBox[{"Table", "[", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"wf", "@", 
         RowBox[{"\"\<TransitionMoments\>\"", "[", "\n", "\t\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Transpose", "[", "tm", "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"states", ",", " ", "1"}], "]"}], ",", " ", "1", ",",
                 " ", "2"}], "]"}], ";;", 
              RowBox[{"Length", "[", "wf", "]"}]}]}], "}"}]}], "\n", 
          "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"wf", ",", " ", "wfns"}], "}"}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"tm", ",", " ", "tms"}], "}"}]}], "\n", "\t\t\t\t\t", 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"dumpValue", "[", "\n", "\t\t  ", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"\"\<baseTmoms$\>\"", "<>", 
         RowBox[{"Map", "[", 
          RowBox[{"ToString", ",", " ", "states"}], "]"}]}], "]"}], ",", "\n",
        "\t\t  ", "baseTmoms", ",", "\n", "\t\t  ", "False"}], "\n", "\t\t  ",
       "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", "\n", "\t\t", 
      RowBox[{
      "Each", " ", "wavefunction", " ", "operates", " ", "over", " ", "a", 
       " ", "different", " ", 
       RowBox[{"state", "."}]}], "\n", "\t\t", "*)"}], "\n", "\t\t", 
     RowBox[{"tmomLists", " ", "=", " ", "\n", "\t\t  ", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "All", ",", " ", "1"}],
            "]"}], "]"}], "&"}], ",", " ", "baseTmoms"}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Abs", "@", "tmomLists"}], "]"}], "^", "2"}]}]}], "\n", "\t\t",
    "]"}]}]], \
"CodeInput",ExpressionUUID->"520ff492-a245-40ac-a322-f41fd699c52c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]getFreqs\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3f3d1dc6-f1eb-40b8-84ed-ee40de859813"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getFreqs", "[", 
   RowBox[{"wfns_", ",", " ", "gsData_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"wfns", "[", "\"\<Energies\>\"", "]"}], "-", 
   RowBox[{"gsData", "[", 
    RowBox[{"[", "1", "]"}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"5328bf2e-556a-4ec7-a924-6882cd504db3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]buildSpectra\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8db3b086-350a-4ac8-9edf-0ed72a918cd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"buildSpectra", "[", 
   RowBox[{"freqs_", ",", " ", "ints_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
     "transInts", ",", "\n", "\t\t\t", "filen", ",", "\n", "\t\t\t", "fs", 
      ",", "\n", "\t\t\t", "is"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t  ", 
    RowBox[{
     RowBox[{"filen", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"Length", "/@", 
        RowBox[{"{", 
         RowBox[{"freqs", ",", " ", "ints"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t  ", 
     RowBox[{"fs", " ", "=", " ", 
      RowBox[{"freqs", "[", 
       RowBox[{"[", 
        RowBox[{";;", "filen"}], "]"}], "]"}]}], ";", "\n", "\t  ", 
     RowBox[{"is", " ", "=", " ", 
      RowBox[{"ints", "[", 
       RowBox[{"[", 
        RowBox[{";;", "filen"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"transInts", "=", "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mlen", "=", 
             RowBox[{"Min", "[", 
              RowBox[{"Length", "/@", 
               RowBox[{"{", 
                RowBox[{"#", ",", " ", "#2"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{";;", "mlen"}], "]"}], "]"}], "*", 
            RowBox[{"#2", "[", 
             RowBox[{"[", 
              RowBox[{";;", "mlen"}], "]"}], "]"}]}]}], "\n", "\t\t\t\t\t", 
          "]"}], "&"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"fs", ",", " ", "is"}], "}"}]}], "\n", "\t\t\t\t", "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"transInts", "=", 
      RowBox[{"transInts", "/", 
       RowBox[{"Max", "[", "transInts", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"ChemSpectrum", "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"#", ",", " ", "#2"}], "}"}], "]"}]}], "&"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"fs", ",", "\n", "\t\t\t\t", "transInts"}], "\n", "\t\t\t\t", 
        "}"}]}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"fb56fefd-d6b4-4557-9988-67fe39a16900"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"3c417b1b-c6a5-482c-8baa-\
618d186db006"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"4020087e-9f84-497e-97eb-\
fc782d0c0272"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"4ecb6918-4bb6-4d9b-aca4-\
a912e3bca55b"]
},
NotebookEventActions->{{"MenuCommand", "Save"} :> 
  EasyIDE`Notebooks`Manipulation`IDESave[
    EvaluationNotebook[]], PassEventsDown -> True, EvaluationOrder -> After},
WindowSize->{853, 770},
WindowMargins->{{58, Automatic}, {Automatic, 9}},
WindowTitle->"EasyIDE: H5+",
TaggingRules->{
 "IndentCharacter" -> "  ", 
  "EasyIDE" -> {
   "Tabs" -> {
     "SpectrumScript" -> {
       "File" -> 
        "/Users/Mark/Documents/UW/Research/H5+/jobs/SpectrumScript.wl"}, 
      "SpectrumScriptPackage" -> {
       "File" -> 
        "/Users/Mark/Documents/UW/Research/H5+/Common/SpectrumScriptPackage.\
nb"}, "H5OldOriginal" -> {
       "File" -> 
        "/Users/Mark/Documents/UW/Research/H5+/jobs/H5OldOriginal.wl"}, 
      "H5OldOriginal.sh" -> {
       "File" -> 
        "/Users/Mark/Documents/UW/Research/H5+/jobs/H5OldOriginal.sh"}}, 
    "FileViewer" -> {"Visible" -> True}, 
    "Toolbars" -> {"Column" -> GridBox[{{
          GridBox[{{
             PaneBox["", ImageSize -> {0, 15}], 
             ButtonBox[
             "", BaseStyle -> "ToolbarShowButton", ButtonData -> 
              "CodePackage"]}}, BaseStyle -> "ToolbarCell"]}}, BaseStyle -> 
        "Toolbars"], "Tags" -> {}, "Cells" -> {"CodePackage" -> None}}, 
    "Project" -> {"Directory" -> "/Users/Mark/Documents/UW/Research/H5+/"}, 
    "ActiveTab" -> "SpectrumScriptPackage", "StyleSheet" -> 
    FrontEnd`FileName[{"EasyIDE", "Extensions", "LightMode"}, 
      "CodePackage.nb"], "FileToolbar" -> "CodePackage", 
    "Options" -> {
     WindowSize -> {764, 749}, 
      WindowMargins -> {{Automatic, 103}, {Automatic, 0}}, 
      TaggingRules -> {
       "UUIDButtons" -> {
         "Active" -> {
           "Button-89ffd2c3-ec41-4179-a9b1-8e28670bca2c" -> False, 
            "Button-ca46e5e0-4fd1-47e8-8cf6-72998922b757" -> False, 
            "Button-a6d68254-3684-4d32-83fc-e5ef6f443930" -> False}}}, 
      FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
      StyleDefinitions -> 
      FrontEnd`FileName[{"BTools"}, "CodePackage.nb", CharacterEncoding -> 
        "UTF-8"]}, "AutoGeneratePackage" -> True, "SavingAction" -> None, 
    "MainStyleName" -> "LightMode"}},
DynamicUpdating->Automatic,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"EasyIDE", "Extensions", "LightMode"}, 
       "CodePackage.nb"]]], 
   Cell[
    CellGroupData[{
      Cell[
      "FileViewerStyles", "Subsubsubsubsection", 
       CellGroupingRules -> {"SectionGrouping", 200}, CellTags -> 
       "FileViewerStyles"], 
      Cell[
       StyleData["Title"], CellMargins -> {{217, Inherited}, {10, 30}}], 
      Cell[
       StyleData["Chapter"], CellMargins -> {{217, Inherited}, {10, 15}}], 
      Cell[
       StyleData["Subchapter"], CellMargins -> {{253, Inherited}, {8, 20}}], 
      Cell[
       StyleData["Section"], CellMargins -> {{217, Inherited}, {8, 18}}], 
      Cell[
       StyleData["Subsection"], 
       CellMargins -> {{240.34765625, 3.}, {8., 20.}}], 
      Cell[
       StyleData["Subsubsection"], 
       CellMargins -> {{256, Inherited}, {8, 12}}], 
      Cell[
       StyleData["Subsubsubsection"], 
       CellMargins -> {{256, Inherited}, {2, 10}}], 
      Cell[
       StyleData["Subsubsubsubsection"], 
       CellMargins -> {{256, Inherited}, {2, 10}}], 
      Cell[
       StyleData["Input"], CellMargins -> {{256, 10}, {5, 8}}], 
      Cell[
       StyleData["Code"], CellMargins -> {{256, 10}, {10, 10}}], 
      Cell[
       StyleData["Output"], CellMargins -> {{256, 10}, {12, 5}}], 
      Cell[
       StyleData["Text"], CellMargins -> {{256, 10}, {7, 8}}], 
      Cell[
       StyleData["Item"], CellMargins -> {{271, 10}, {4, 8}}], 
      Cell[
       StyleData["ItemParagraph"], CellMargins -> {{271, 10}, {4, 1}}], 
      Cell[
       StyleData["Subitem"], CellMargins -> {{295, 12}, {4, 4}}], 
      Cell[
       StyleData["SubitemParagraph"], CellMargins -> {{295, 12}, {4, 1}}], 
      Cell[
       StyleData["Echo"], 
       CellMargins -> {{256, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["Print"], 
       CellMargins -> {{256, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["PrintTemporary"], 
       CellMargins -> {{250, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["CellInsertionPointCell"], CellMargins -> {{207, 0}, {0, 0}},
        Magnification -> 1], 
      Cell[
       StyleData["CodeChapter"], CellMargins -> {{217, Inherited}, {10, 15}}], 
      Cell[
       StyleData["CodeSection"], CellMargins -> {{217, Inherited}, {8, 18}}], 
      
      Cell[
       StyleData["CodeSubsection"], 
       CellMargins -> {{245, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["CodeSubsubsection"], 
       CellMargins -> {{249, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["CodeSubsubsubsection"], 
       CellMargins -> {{253, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["CodeSubsubsubsubsection"], 
       CellMargins -> {{257, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["CodeInput"], 
       CellMargins -> {{257, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["InputChapter"], 
       CellMargins -> {{217, Inherited}, {10, 15}}], 
      Cell[
       StyleData["InputSection"], CellMargins -> {{240.3477, 3.}, {8., 12.}}], 
      Cell[
       StyleData["InputSubsection"], 
       CellMargins -> {{256, Inherited}, {8, 12}}]}, Closed]]}, Visible -> 
  False, TaggingRules -> {
   "EasyIDE" -> {"FileViewer" -> {"Visible" -> False}}}, FrontEndVersion -> 
  "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
